//- default actions
//- prefer ng-hide > ng-if for this button

button.btn.btn-xs.white(
  ng-click = "SMC.state.showHostName = true"
  ng-hide = "SMC.state.showHostName"
  ng-init = "SMC.state.showHostName = false"
) {{$root.featureFlags.connections ? 'Connect to a Container' : 'Insert a URL'}}

button.btn.btn-xs.gray(
  ng-class = "{'active': SMC.data.toggleSidebar}"
  ng-click = "SMC.data.toggleSidebar = !SMC.data.toggleSidebar"
  ng-if = "\
    $root.featureFlags.hostnameTool && \
    !SMC.state.showHostName\
  "
  title = "Toggle list of URLs"
)
  //- show button if notifications
  .btn.btn-xxs.btn-badge(
    ng-if = "$root.featureFlags.hostnameNotifications"
    title = "999 new URLs"
  ) 999
  //- show icon if no notifications
  svg.iconnables.icons-sidebar(
    ng-if = "!$root.featureFlags.hostnameNotifications"
  )
    use(
      xlink:href = "#icons-sidebar"
    )
  | URLs

//- if inserting URLs
.clearfix.flex-row.js-animate(
  ng-if = "SMC.state.showHostName"
)

  //- add 'ng-invalid' class if the user inputs an invalid variable name
  .input-wrapper(
    ng-if = "$root.featureFlags.connections"
  )
    input.input.input-sm.monospace.input-validate(
      ng-class = "{'ng-invalid': false}"
      placeholder = "Variable"
      spellcheck = "false"
      title = "Variable (required)"
    )
    svg.iconnables.icons-help(
      pop-over
      pop-over-hover-trigger
      pop-over-options = "{\"top\":39,\"centered\":true}"
      pop-over-template = "environmentVariableValidationPopoverView"
    )
      use(
        xlink:href = "#icons-help"
      )

  p.p.text-gray(
    ng-if = "$root.featureFlags.connections"
  ) =

  .input-group.input-group-sm.white
    
    //- fancy-select.input-sm.monospace.text-overflow(
    //-   placeholder = "Protocol"
    //-   spellcheck = "false"
    //-   title = "Protocol (optional)"
    //-   type = "text"
    //-   value = "SMC.state.newLink.protocol"
    //- )
    //-   li.list-item.popover-list-item.small.disabled Select Protocol (optional)
    //-   fancy-option.monospace(
    //-     value = "'http://'"
    //-   ) http:&#47;&#47;

    fancy-select.monospace.btn-sm.white.select-url(
      placeholder = "Select a URL"
      title = "Select a URL (required)"
      value = "SMC.state.newLink.server"
    )
      li.list-item.popover-list-item.small.disabled Select a URL to connect to
      fancy-option.monospace(
        ng-if = "instance.attrs.shortHash !== $parent.$parent.$parent.SMC.instance.attrs.shortHash"
        ng-repeat = "instance in $parent.SMC.data.instances.models | orderBy: ['getElasticHostname()']"
        value = "instance"
      ) {{$parent.instance.getElasticHostname()}}
    fancy-select.input-sm.monospace.text-overflow(
      placeholder = "Port (optional)"
      title = "Port (optional)"
      type = "text"
      value = "$parent.SMC.state.newLink.port"
    )
      li.list-item.popover-list-item.small.disabled Select Port (optional)
      fancy-option(
        ng-repeat = "port in $parent.$parent.SMC.state.newLink.server | extractInstancePorts"
        value = "port"
      ) :{{$parent.port}}

.clearfix.js-animate(
  ng-if = "SMC.state.showHostName"
)
  //- show if the user inputs an invalid variable name
  //- .invalid-message.text-overflow(
  //-   title = "Only letters, numbers, and hyphens (-) are allowed."
  //- ) Only letters, numbers, and hyphens (-) are allowed.
  //- clear the form when either of these buttons are clicked
  button.btn.btn-xs.green.float-right(
    ng-class = "{'float-right': !$root.featureFlags.connections}"
    ng-click = "SMC.state.showHostName = false; SMC.insertHostName(SMC.state.newLink);"
  ) {{$root.featureFlags.connections ? 'Create Connection' : 'Insert URL'}}
  button.btn.btn-xs.gray.btn-cancel.float-right(
    ng-click = "SMC.state.showHostName = false"
  ) Cancel
