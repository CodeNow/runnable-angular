//- if no rules of this type
ul.tr.thead.clearfix
  li.cell {{ header.title }}
    button.btn.btn-xs.white(
      ng-click = "openRulePopover()"
      ng-disabled = "tableProcessing || state.recalculating"
      pop-over
      pop-over-actions = "popoverData.actions"
      pop-over-active = "popoverData.active"
      pop-over-data = "popoverData.data"
      pop-over-options = "{\"left\":0,\"top\":0}"
      pop-over-template = "popoverTemplate"
      pop-over-trigger = "activeAttr"
    ) {{ header.description }}
ul.tr.tr-empty.clearfix(
  ng-if = "!list.length"
)
  li.cell(
    ng-class = "{'no-touching': tableProcessing || state.recalculating}"
    ng-click = "openRulePopover()"
  ) {{ emptyText.description }}

ul.table-drag-drop(
  dnd-allowed-types = "properties.allowedTableTypes"
  dnd-drop = "dropRule(event, index, item)"
  dnd-list = "list"
)
  li.tr.tr-action.clearfix(
    dnd-draggable = "item"
    dnd-dragstart = "models.selected = item"
    dnd-effect-allowed = "move"
    dnd-type = "item.action"
    ng-class="{\
      'disabled': models.selected === item,\
      'no-touching': (tableProcessing || state.recalculating)\
    }"
    ng-click = "openRulePopover(item)"
    ng-repeat = "item in list"
  )
    .cell.cell-action(
      dnd-handle
      ng-class = "{\
        disabled: list.length < 2,\
        'no-touching': list.length < 2\
      }"
    )
      svg.iconnables.icons-drag
        use(
          xlink:href = "#icons-drag"
        )
    //- $root.featureFlags.multilineFnR
    //- title should be multiline
    .cell.monospace.text-overflow.cell-arrow(
      ng-attr-title = "{{ item.search || item.source }}"
      ng-class = "{disabled: item.rule.warnings.length}"
    )
      //- $root.featureFlags.multilineFnR
      //- add these if the find / replace is multiline
      //- only show the first line change
      //- only show the before ellipsis if the change is not the first line
      //- only show the after ellipsis if the change is not the last line
      //- span.more …&#32;
      | {{ item.search || item.source }}
      //- span.more &#32;…
    .cell.monospace.text-overflow(
      ng-attr-title = "{{ item.replace || item.dest }}"
    ) {{ item.replace || item.dest }}
    //- add .disabled if no warning
    .cell.cell-action.monospace(
      ng-class = "{disabled: !item.warnings.length}"
    )

      //- show when a rule has no matches
      svg.iconnables.icons-alert(
        tooltip = "This rule has no matches."
        tooltip-options = "{\"class\":\"bottom no-arrow\",\"top\":33,\"right\":-11}"
      )
        use(
          xlink:href = "#icons-alert-alt"
        )

      //- show when a string rule uses a URL for a branch container
      //- svg.iconnables.icons-alert(
      //-   pop-over
      //-   pop-over-hover-trigger
      //-   pop-over-options = "{\"top\":33,\"right\":-11}"
      //-   pop-over-template = "wrongUrlPopoverView"
      //- )
      //-   use(
      //-     xlink:href = "#icons-alert-alt"
      //-   )

      //- show when a successful connection is made
      //- svg.iconnables.icons-link(
      //-   tooltip = "Connected to mavis"
      //-   tooltip-options = "{\"class\":\"bottom no-arrow\",\"top\":33,\"right\":-11}"
      //- )
      //-   use(
      //-     xlink:href = "#icons-link"
      //-   )
