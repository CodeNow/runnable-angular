.popover-overlay
  .popover.popover-fixed.popover-rules(
    ng-class = "{in: active}"
    ng-form = "popoverRuleForm"
    ng-init = "currentState = {};"
    ng-style = "popoverStyle.getStyle()"
  )
    .popover-content

      //- if new rule
      h3.popover-title {{ data.state._id ? '': 'New '}}String Replace Rule
        button.btn.btn-xs.red(
          ng-click = "actions.deleteRule(data.state)"
          ng-if = "data.state._id"
        )
          svg.iconnables.icons-trash
            use(
              xlink:href = "#icons-trash"
            )
          | Delete Rule

      p.p(
        ng-if = "!$root.featureFlags.multilineFnR"
      ) Use
        svg.iconnables
          use(
            xlink:href = "#icons-server-link"
          )
        | URLs to connect to other containers.

      ul.list.list-bulleted.text-gray.small
        li.list-item Rules are case-sensitive
        li.list-item Trailing whitespace is not trimmed
        li.list-item Regular expressions are not supported

      //- ghetto autofocus
      .textarea-wrapper(
        ng-class = "{'focus': focus.textAreaFind}"
        ng-if = "$root.featureFlags.multilineFnR"
        ng-init = "focus.textAreaFind = true"
      )
        label.textarea-menu(
          for = "textarea-find"
        ) Find
        textarea#textarea-find.textarea.monospace(
          ng-blur = "focus.textAreaFind = false"
          ng-focus = "focus.textAreaFind = true"
          placeholder = "localhost:27017"
          required
          spellcheck = "false"
          tabindex = "1"
        )

      .textarea-wrapper(
        ng-class = "{'focus': focus.textAreaReplace}"
        ng-if = "$root.featureFlags.multilineFnR"
      )
        label.textarea-menu(
          for = "textarea-replace"
        ) Replace
          //- fancy select
          button.btn.btn-xxs.gray.float-right Insert URL
            svg.iconnables.icons-arrow-down
              use(
                xlink:href = "#icons-arrow-down"
              )
        textarea#textarea-replace.textarea.monospace(
          ng-blur = "focus.textAreaReplace = false"
          ng-focus = "focus.textAreaReplace = true"
          placeholder = "sample-user.runnableapp.com:27017"
          required
          spellcheck = "false"
          tabindex = "1"
        )

      //- ****************************
      //- forms for !$root.featureFlags.multilineFnR
      //- ****************************
      .label-row(
        ng-if = "!$root.featureFlags.multilineFnR"
      )
        label.label-col Find string
          input.input.input-sm.monospace(
            name = "fromTextBox"
            ng-change = "currentState.searched = false"
            ng-disabled = "currentState.processing"
            ng-model = "data.state.search"
            required
            placeholder = "localhost:27017"
            spellcheck = "false"
          )
        .span-col â†’
        label.label-col Replace
          //- add 'ng-warning' class if a branch container URL is used in this input
          fancy-select.input.input-sm.monospace.input-validate(
            name = "toTextBox"
            ng-class = "{'ng-warning': $root.featureFlags.connections}"
            ng-disabled = "currentState.processing"
            ng-required = "true"
            placeholder = "sample-user.runnableapp.com:27017"
            toggle-attribute = "showDropdown"
            toggle-object = "currentState"
            type = "text"
            value = "data.state.replace"
          )
            li.list-item.popover-list-item.small.disabled(
              ng-click = "$event.stopPropagation()"
            ) Select a URL to connect to
            fancy-option.monospace(
              ng-repeat = "instance in $parent.data.parentData.instances.models | filter:$parent.$parent.data.instanceFilter()"
              title = "{{ instance.getElasticHostname() }}"
              value = "instance.getElasticHostname()"
            ) {{ $parent.instance.getElasticHostname() }}
          button.btn.btn-sm.btn-icon.gray(
            ng-click = "currentState.showDropdown = !currentState.showDropdown; $event.stopPropagation();"
            ng-if = "data.parentData.instances.models.length > 1"
            title = "Show list of URLs"
          )
            //^ check if greater than 1 to account for itself ^
            svg.iconnables
              use(
                xlink:href = "#icons-server-link"
              )
          //- show if a branch container URL is used in the replace input
          p.p.warning-message(
            ng-if = "$root.featureFlags.connections"
          ) To connect to runnable-angular, use its&#32;
            a.link Repository URL
            | &#32;instead.

      //- if association
      small.small.table-details(
        ng-if = "data.state.diffs"
      ) {{ data.getMatchDisplay(data.state) }}

      //- association verification table
      .table.table-diff(
        diff-display
        file-diff = "diff"
        ng-repeat = "diff in data.state.diffs"
        rule = "data.state"
        state = "data.parentState"
      )

    .popover-footer.clearfix
      button.btn.btn-sm.green(
        ng-click = "actions.performCheck(data.state, currentState)"
        ng-disabled = "!popoverRuleForm.$valid || popoverRuleForm.$pristine || currentState.processing"
        ng-if = "!currentState.searched"
      )
        //- spinner
        .spinner-wrapper.spinner-sm.spinner-white.in(
          ng-if = "currentState.processing"
          ng-include = "'spinner'"
        )
        span {{ currentState.processing ? 'Searching' : 'Search for Matches' }}
      button.btn.btn-sm.green(
        ng-click = "actions.createRule(data.state)"
        ng-if = "currentState.searched"
      ) {{ data.state._id ? 'Update': 'Create'}} Rule
      button.btn.btn-sm.gray.btn-cancel(
        ng-click = "actions.cancel()"
      ) Cancel
