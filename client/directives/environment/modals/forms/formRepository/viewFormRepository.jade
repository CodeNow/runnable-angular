.help-container(
  ng-if = "helpCards.getActiveCard().helpPopover.repositories"
)
  .help(
    ng-bind-html = "helpCards.getActiveCard().helpPopover.repositories"
  )
.help-padding(
  ng-if = "helpCards.getActiveCard().helpPopover.repositories"
  ng-bind-html = "helpCards.getActiveCard().helpPopover.repositories"
)

.label.clearfix
  .label-col Initial Branch

  .input-col
    fancy-select(
      ng-required = "true"
      value = "state.branch"
    )
      li.list-item.popover-list-item.small Select initial branch
      fancy-option(
        ng-repeat = "branch in $parent.branches.models"
        value = "branch"
      )
        svg.iconnables.icons-branch
          use(
            xlink:href = "#icons-branch"
          )
        | {{ $parent.branch.attrs.name }}
    small.small We’ll build the first container with the code on this branch. We recommend choosing a stable branch.

label.label.clearfix
  .label-col Build Commands
    small.small (optional)

  .input-col
    //- we only have suggestions for build commands on the main repository
    textarea.textarea.monospace(
      ng-disabled = "startCommandCanDisable && !state.selectedStack"
      ng-model = "state.commands"
      placeholder = "Build commands"
      spellcheck = "false"
    )
    small.small Specify the commands that need to be executed when your container is built and before it’s launched that support your application (e.g. installing packages).

label.label.clearfix
  .label-col Container CMD

  .input-col
    fancy-select.monospace(
      ng-disabled = "startCommandCanDisable && !state.selectedStack.selectedVersion"
      ng-required = "true"
      placeholder = "Container command"
      show-dropdown = "state.selectedStack.startCommand"
      type = "text"
      value = "state.startCommand"
    )
      li.list-item.popover-list-item.small Suggested Container CMD
      fancy-option(
        value = "$parent.state.selectedStack.startCommand"
      ) {{$parent.$parent.state.selectedStack.startCommand}}

    small.small This is the command that’ll be executed when your container is launched, to start running your code. This is the long-running process your code requires (e.g. ‘apache’, ‘NPM start’, ‘Python server’).  When this process terminates, your container will also stop running. #{''}
      a.link(
        href = "//docs.docker.com/reference/builder/#cmd"
        target = "_blank"
      ) More about the Container CMD
