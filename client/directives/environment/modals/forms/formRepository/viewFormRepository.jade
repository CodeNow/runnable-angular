.help-container(
  ng-if = "helpCards.getActiveCard().helpPopover.repositories"
)
  .help(
    ng-bind-html = "helpCards.getActiveCard().helpPopover.repositories"
  )

.label.clearfix
  .label-col Initial Branch

  .input-col
    fancy-select(
      ng-disabled = "branchFetching"
      ng-required = "true"
      value = "state.branch"
      track-by = "attrs.name"
      spinner-flag = "branchFetching"
    )
      li.list-item.popover-list-item.small Select initial branch
      fancy-option(
        ng-repeat = "branch in $parent.state.repo.branches.models"
        value = "branch"
      )
        svg.iconnables.icons-branch
          use(
            xlink:href = "#icons-branch"
          )
        | {{ $parent.branch.attrs.name }}
    small.small We’ll build the first container with the code on this branch. We recommend choosing a stable branch.

.label.clearfix
  .label-col Build Commands
    small.small (optional)

  .input-col
    label.small.strong.text-right.toggle-wrapper
      span.underline(
        tooltip = "Disabling Auto Deploy will stop your container from automatically updating with new changes to your repositories."
        tooltip-options = "{\"class\":\"bottom tooltip-definition\",\"left\":9,\"top\":18}"
      ) cache
      | &#32; a line
      input.toggle-input(
        type = "checkbox"
        ng-model = "expandMe"
      )
      .toggle-group.toggle-xs.float-right(
        style = "margin: 2px 1px 0px 6px;"
      )
    .build-cmd-wrapper
      .content-editable.monospace(
        contentEditable = "true"
      )
        div npm install
        div npm install
        div npm install
        div npm install
        div npm install
        div npm install
        div npm install
        div npm install
        div npm install
        div npm install
      .cache-column(
        ng-class = "{\
          in: expandMe\
        }"
      )
        input.input-radio(
          type = "radio"
          name = "cache"
        )
        input.input-radio(
          type = "radio"
          name = "cache"
        )
        input.input-radio(
          type = "radio"
          name = "cache"
        )
        input.input-radio(
          type = "radio"
          name = "cache"
        )
        input.input-radio(
          type = "radio"
          name = "cache"
        )
        input.input-radio(
          type = "radio"
          name = "cache"
        )
        input.input-radio(
          type = "radio"
          name = "cache"
        )
        input.input-radio(
          type = "radio"
          name = "cache"
        )
        input.input-radio(
          type = "radio"
          name = "cache"
        )
        input.input-radio(
          type = "radio"
          name = "cache"
        )
    small.small Specify the commands that need to be executed when your container is built and before it’s launched that support your application (e.g. installing packages).

label.label.clearfix
  .label-col Container CMD

  .input-col
    fancy-select.monospace(
      ng-disabled = "startCommandCanDisable && !state.selectedStack.selectedVersion"
      ng-required = "ngShow()"
      name = "repository.startCommand"
      placeholder = "Container command"
      show-dropdown = "state.selectedStack.startCommand"
      type = "text"
      value = "state.startCommand"
    )
      li.list-item.popover-list-item.small Suggested Container CMDs
      fancy-option(
        ng-repeat = "startCmd in $parent.state.selectedStack.startCommand"
        value = "startCmd"
      ) {{$parent.startCmd}}

    small.small This is the command that’ll be executed when your container is launched, to start running your code. This is the long-running process your code requires (e.g. ‘apache’, ‘npm start’, ‘python server.py’).  When this process terminates, your container will also stop running. #{''}
      a.link(
        href = "//docs.docker.com/reference/builder/#cmd"
        target = "_blank"
      ) More about the Container CMD
