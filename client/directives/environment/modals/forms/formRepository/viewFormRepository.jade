.help-container(
  ng-if = "helpCards.getActiveCard().helpPopover.repositories"
)
  .help
    button.btn.btn-xs.btn-icon(
      ng-click = "helpCards.hideActiveCard()"
    )
      svg.iconnables.icons-close
        use(
          xlink:href = "#icons-close"
        )
    span(
      ng-bind-html = "helpCards.getActiveCard().helpPopover.repositories"
    )

label.label.clearfix
  .label-col Packages
    small.small (optional)
  .input-col.input-prefix.input-prefix-monospace(
    data-prefix = "apt-get install"
  )
    input.input.input-sm.monospace(
      ng-disabled = "startCommandCanDisable && !state.selectedStack"
      ng-model = "state.packages.packageList"
      ng-change = "updateDockerfile()"
      spellcheck = "false"
    )
    small.small Add Ubuntu packages via apt-get, separated with spaces (e.g. ‘dnsutils vim=7.3’).

.label.clearfix.label-build-commands
  .label-col Build Commands
    small.small (optional)
  .input-col
    .well.well-merged.well-merged-top.small
      strong.strong Note:&#32;
      span.span Installing private modules? Make sure you add your SSH keys{{!SMC.instance ? ' on the next step' : ''}}.&#32;
      button.btn.btn-xxs.white.float-right(
        ng-click = "SMC.changeTab('files')"
        ng-if = "SMC.instance"
        type = "button"
      )
        svg.iconnables.icons-files.float-left
          use(
            xlink:href = "#icons-keys-files"
          )
        | Files & SSH Keys
    textarea.textarea.monospace(
      command-editor
      ng-change = "updateDockerfile()"
      ng-disabled = "startCommandCanDisable && !state.selectedStack"
      ng-model = "state.mainRepoContainerFile.commands"
      ng-trim = "false"
      spellcheck = "false"
    )
    small.small Add any commands needed to support your application. They’ll be run before the Container CMD from your repository’s root folder.

label.label.label-container-cmd.clearfix(
  for = "textarea-container-cmd"
)
  .label-col Container CMD
  .input-col
    fancy-select.monospace.input-validate(
      autocomplete = "off"
      id = "textarea-container-cmd"
      name = "repository.startCommand"
      ng-disabled = "startCommandCanDisable && !state.selectedStack.selectedVersion"
      ng-if = "!$root.featureFlags.multilineStartCmd"
      ng-required = "startCommandCanDisable || ngShow()"
      on-update = "updateDockerfile"
      show-dropdown = "state.selectedStack.startCommand"
      spellcheck = "false"
      type = "text"
      value = "state.startCommand"
    )
      li.list-item.popover-list-item.small.disabled Suggested Container CMDs
      fancy-option(
        ng-repeat = "startCmd in $parent.state.selectedStack.startCommand"
        value = "startCmd"
      ) {{$parent.startCmd}}

    .well.well-merged.well-merged-top.small(
      ng-if = "SMC.state.selectedStack.startCommand.length && $root.featureFlags.multilineStartCmd"
    )
      strong.strong Suggested for {{SMC.state.selectedStack.name}}:&#32;
      span.btn.btn-xxs.white.monospace(
        ng-click = "$event.preventDefault()"
        ng-repeat = "startCmd in SMC.state.selectedStack.startCommand"
        pop-over
        pop-over-hover-trigger
        pop-over-options = "{\"top\":25,\"centered\":true}"
        pop-over-template = "insertTooltip"
        pop-over-trigger = "hover"
      ) {{startCmd}}
    textarea.textarea.monospace(
      autocomplete = "off"
      name = "repository.startCommand"
      ng-disabled = "startCommandCanDisable && !state.selectedStack.selectedVersion"
      ng-if = "$root.featureFlags.multilineStartCmd"
      ng-required = "startCommandCanDisable || ngShow()"
      on-update = "updateDockerfile"
      spellcheck = "false"
      value = "state.startCommand"
    )
  .input-col
    small.small This is the long-running process that’ll run when your container is launched (e.g. ‘apache’, ‘NPM start’). Your container will stop running if this process terminates. #{''}
      a.link(
        href = "//docs.docker.com/reference/builder/#cmd"
        target = "_blank"
      ) More about the Container CMD
