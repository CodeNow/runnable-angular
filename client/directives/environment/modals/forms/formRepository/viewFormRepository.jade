.help-container(
  ng-if = "helpCards.getActiveCard().helpPopover.repositories"
)
  .help(
    ng-bind-html = "helpCards.getActiveCard().helpPopover.repositories"
  )

.label.clearfix.label-build-commands
  .label-col Build Commands
    small.small (optional)
  //- this element should be disabled when the text field below it is disabled or empty.
  label.small.strong.text-right.toggle-wrapper(
    ng-if = "$root.featureFlags.buildCommandCache"
  ) Cache
    span.span &#32;a command
    input.toggle-input(
      ng-disabled = "startCommandCanDisable && !state.selectedStack"
      ng-model = "data.cacheCommand"
      type = "checkbox"
    )
    .toggle-group.toggle-xs.float-right
  .input-col
    //-************
    //- deprecated textarea, remove with $root.featureFlags.buildCommandCache
    //- we only have suggestions for build commands on the main repository
    textarea.textarea.monospace(
      ng-disabled = "startCommandCanDisable && !state.selectedStack"
      ng-if = "!$root.featureFlags.buildCommandCache"
      ng-model = "state.commands"
      spellcheck = "false"
    )
    //- end deprecated textarea
    //-************
    //- this element should get the class .focus when the textarea it contains gets focused
    .build-commands-wrapper(
      ng-class = "{'cache-in': data.cacheCommand}"
      ng-if = "$root.featureFlags.buildCommandCache"
    )
      //- this textarea needs to expand vertically to contain its content, like the contentEditable div below (I know, sorry).
      textarea.textarea.monospace(
        ng-disabled = "startCommandCanDisable && !state.selectedStack"
        ng-model = "state.commands"
        placeholder = "npm install&#10;grunt"
        spellcheck = "false"
      )
      //- this element should start out empty. then, for each line that is added to the
      //- textarea, one .radio-wrapper (with input) and one .cache-row should be added to it.
      .cache-column
        .cache-border
        //- this content is just for demonstration.
        label.radio-wrapper
          input(
            checked
            name = "cache-radio"
            type = "radio"
          )
        .cache-row
        label.radio-wrapper
          input(
            name = "cache-radio"
            type = "radio"
          )
        .cache-row
        label.radio-wrapper
          input(
            name = "cache-radio"
            type = "radio"
          )
        .cache-row
        label.radio-wrapper
          input(
            name = "cache-radio"
            type = "radio"
          )
        .cache-row
    small.small Add any commands needed to support your application. They will be run before the Container CMD.

label.label.clearfix(
  ng-if = "$root.featureFlags.packagesField"
)
  .label-col Packages
    small.small (optional)

  .input-col
    textarea.textarea.monospace(
      ng-disabled = "startCommandCanDisable && !state.selectedStack"
      spellcheck = "false"
      ng-model = "state.packages.packageList"
      placeholder = "dnsutils vim"
    )
    small.small Add any packages you would like to install via apt-get, separated with spaces (e.g. ‘curl git gcc-4.1=4.1.2’). This container is based on &#32;
      strong.strong Ubuntu

label.label.clearfix
  .label-col Container CMD

  .input-col
    fancy-select.monospace(
      ng-disabled = "startCommandCanDisable && !state.selectedStack.selectedVersion"
      ng-required = "startCommandCanDisable || ngShow()"
      name = "repository.startCommand"
      show-dropdown = "state.selectedStack.startCommand"
      type = "text"
      value = "state.startCommand"
    )
      li.list-item.popover-list-item.small Suggested Container CMDs
      fancy-option(
        ng-repeat = "startCmd in $parent.state.selectedStack.startCommand"
        value = "startCmd"
      ) {{$parent.startCmd}}

    small.small This is the long-running process that’ll run when your container is launched (e.g. ‘apache’, ‘NPM start’). Your container will stop running if this process terminates. #{''}
      a.link(
        href = "//docs.docker.com/reference/builder/#cmd"
        target = "_blank"
      ) More about the Container CMD