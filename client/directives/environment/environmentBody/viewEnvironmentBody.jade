//- spinner
.card.gray.disabled.load.empty(
  ng-if = "data.loadingNewServers"
)
  .spinner-wrapper.spinner-md.spinner-gray.in(
    ng-include = "'spinner'"
  )

//- empty state
.card.gray.disabled.load.empty(
  ng-if = "!data.loadingNewServers && data.newServers.length === 0"
) Add a new server to get started

//- server card
.card.gray.disabled.load(
  ng-repeat = "server in data.newServers"
)
  .card-header
    //- if building: text says "Building"; title attribute shows time building "82 seconds" "50 minutes" etc.
      - if building failed: text says "Build Failed"; title attribute shows when the build failed "Failed 2 minutes ago"
      - if building succeeded, and running: text says "Running"; title attribute shows time running "82 seconds" "50 minutes" etc.
      - if building succeeded, and stopped: text says "Stopped"; title attribute shows when the server was stopped "Stopped 2 minutes ago"
      - if building succeeded, and run fails: text says "Crashed"; title attribute shows when the server crashed "Crashed 2 minutes ago"
    button.btn.btn-sm.btn-title.white(
      ng-if = "!server.building"
      pop-over
      pop-over-actions = "actions"
      pop-over-data = "server"
      pop-over-options = "{\"left\":0,\"top\":38}"
      pop-over-template = "viewPopoverServerOptions"
    )
      .icons-status(
        ng-class = "getInstanceClasses(server.instance)"
        ng-attr-title = "{{ server.instance | cardBuildStatusTitle}}"
      )
      span.btn-text.text-overflow(
        ng-attr-title = "{{ (server.opts.name || server.instance.attrs.name) }}"
      ) {{ (server.opts.name || server.instance.attrs.name) }}
      //- span.btn-text(
      //-   ng-attr-title = "{{ server.instance | cardBuildStatusTitle}}"
      //- ) â€” {{ server.instance | cardBuildStatusText}}
      svg.iconnables.icons-gear
        use(
          xlink:href = "#icons-gear"
        )
      svg.iconnables.icons-arrow-down
        use(
          xlink:href = "#icons-arrow-down"
        )
    input.input.input-sm.monospace(
      readonly
      select-all
      value = "{{ (server.opts.name || server.instance.attrs.name) | filterCreateInstanceUrl: dataApp.data.activeAccount }}"
    )

  ul.card-body.card-loading(
    ng-if = "server.building"
  )
    .spinner-wrapper.spinner-md.spinner-gray.in(
      ng-include = "'spinner'"
    )
  ul.card-body.load(
    ng-if = "!server.repo"
  )
    li.btn.white(
      modal
      modal-actions = "actions"
      modal-current-model = "server"
      modal-data = "data"
      modal-state-model = "'buildfiles'"
      modal-template = "editServerModalOpen"
    )
      svg.iconnables.icons-terminal
        use(
        xlink:href = "#icons-terminal"
        )
      h3.h3 Advanced Configuration

  ul.card-body.load(
    ng-if = "server.repo && !server.building"
  )
    li.btn.white(
      modal
      modal-actions = "actions"
      modal-current-model = "server"
      modal-data = "data"
      modal-state-model = "'buildfiles'"
      modal-template = "editServerModalOpen"
      ng-if = "data.revealBuildfiles"
    )
      svg.iconnables.icons-terminal
        use(
          xlink:href = "#icons-terminal"
        )
      h3.h3 Build Files
      p.p.text-overflow No errors
      svg.iconnables.icons-arrow-down
        use(
          xlink:href = "#icons-arrow-down"
        )
    li.btn.white(
      modal
      modal-actions = "actions"
      modal-current-model = "server"
      modal-data = "data"
      modal-state-model = "'stack'"
      modal-template = "editServerModalOpen"
      ng-hide = "data.revealBuildfiles"
    )
      svg.iconnables.icons-terminal
        use(
          xlink:href = "#icons-terminal"
        )
      h3.h3 Stack
      p.p.text-overflow {{ actions.getFlattenedSelectedStacks(server.selectedStack) }}
      svg.iconnables.icons-arrow-down
        use(
          xlink:href = "#icons-arrow-down"
        )
    li.btn.white(
      modal
      modal-actions = "actions"
      modal-current-model = "server"
      modal-data = "data"
      modal-state-model = "'command'"
      modal-template = "editServerModalOpen"
      ng-hide = "data.revealBuildfiles"
    )
      svg.iconnables.icons-terminal
        use(
          xlink:href = "#icons-terminal"
        )
      h3.h3 Start Command
      p.p.text-overflow {{ server.startCommand }}
      svg.iconnables.icons-arrow-down
        use(
          xlink:href = "#icons-arrow-down"
        )
    li.btn.white(
      modal
      modal-actions = "actions"
      modal-current-model = "server"
      modal-data = "data"
      modal-state-model = "'ports'"
      modal-template = "editServerModalOpen"
      ng-hide = "data.revealBuildfiles"
    )
      svg.iconnables.icons-terminal
        use(
          xlink:href = "#icons-terminal"
        )
      h3.h3 Ports
      p.p.text-overflow {{ server.ports.join(' ') || 'None'}}
      svg.iconnables.icons-arrow-down
        use(
          xlink:href = "#icons-arrow-down"
        )
    li.btn.white(
      modal
      modal-actions = "actions"
      modal-current-model = "server"
      modal-data = "data"
      modal-state-model = "'repositories'"
      modal-template = "editServerModalOpen"
    )
      svg.iconnables.icons-terminal
        use(
          xlink:href = "#icons-terminal"
        )
      h3.h3 Repositories
      p.p.text-overflow {{ server.instance.contextVersion.appCodeVersions.models[0].attrs.branch }}
      svg.iconnables.icons-arrow-down
        use(
          xlink:href = "#icons-arrow-down"
        )
    li.btn.white(
      modal
      modal-actions = "actions"
      modal-current-model = "server"
      modal-data = "data"
      modal-state-model = "'env'"
      modal-template = "editServerModalOpen"
    )
      svg.iconnables.icons-terminal
        use(
          xlink:href = "#icons-terminal"
        )
      h3.h3 Environment Variables
      p.p.text-overflow {{ (server.opts.env.length ? server.opts.env.length : 'none') + ' defined'}}
      svg.iconnables.icons-arrow-down
        use(
          xlink:href = "#icons-arrow-down"
        )
