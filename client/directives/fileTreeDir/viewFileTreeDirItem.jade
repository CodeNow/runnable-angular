li(
  file-tree-dir
  ng-repeat = "\
    fs in dir.contents.models \
   | isDir \
   | orderBy:actions.normalizeMixedDataValue\
  "
  dir = "fs"
  parent-dir = "dir"
  file-model = "fileModel"
  open = "fs.state.open"
  open-items = "openItems"
  read-only = "readOnly"
)
li.file(
  draggable
  ng-repeat = "\
    fs in dir.contents.models \
    | isFile \
    | orderBy:actions.normalizeMixedDataValue\
  "
  ng-class = "{\
    active: fs.state.active,\
    dirty: (fs.state.body !== fs.attrs.body),\
    'in-progress': fs.state.uploading\
  }"
)
  a(
    ng-click = "\
      actions.closeOpenModals();\
      actions.openFile(fs);\
      $event.stopPropagation();\
    "
    pop-over
    pop-over-actions = "popoverFileExplorerFile.actions"
    pop-over-data = "fs"
    pop-over-options = "popoverFileExplorerFile.options"
    pop-over-template = "viewPopoverFileExplorerFileMenu"
    pop-over-trigger = "rightClick"
  )
    .spinner-wrapper.spinner-sm.in(
      ng-if = "fs.state.uploading"
      ng-include = "'spinner'"
    )
    .progress.in(
      ng-if = "fs.state.uploading"
      ng-style = "getFileStyle(fs)"
    )
    svg.iconnables.filetypes.icons-file(
      ng-if = "!fs.state.uploading"
    )
      use(
        xlink:href = "#icons-file"
      )
    input.tree-input(
      name = "{{ fs.id() }}"
      ng-click = "actions.handleClickOnFileInput($event, fs)"
      ng-keyup = "actions.shouldCloseFileNameInput($event, fs)"
      ng-blur = "actions.closeFileNameInput($event, fs)"
      ng-readonly = "!fs.state.renaming"
      select-on = "fs.state.renaming"
      value = "{{ fs.attrs.name }}"
    ) {{ fs.attrs.name }}
    span.item-name {{ fs.attrs.name }}