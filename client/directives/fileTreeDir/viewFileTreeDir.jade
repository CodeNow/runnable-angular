li.folder(
  droppable
  draggable
  ng-class = "{ 'in': dir.state.open }"
)
  pop-over(
    actions = "popoverFileExplorerFolder.actions"
    popover-ready = "popoverFileExplorerFolder.show"
    template = "viewFileTreePopoverFileExplorerFolderMenu"
    popover-options = "popoverFileExplorerFolder.options"
  )

  a(
    ng-click = "actions.closeOpenModals(); \
                dir.state.open = !dir.state.open; \
                $event.stopPropagation();"
    toggle-pop-over
    toggle-pop-over-right-click = "true"
    toggle-pop-over-options = "popoverFileExplorerFolder.options"
    toggle-pop-over-model = "popoverFileExplorerFolder.show"
  )
    svg.iconnables.filetypes.icons-folder
      use(xlink:href = "#icons-folder")
    input.tree-input(
      ng-keyup = "($event.keyCode === 13) && actions.closeFolderNameInput();"
      ng-readonly = "!editFolderName"
      value = "{{ dir.attrs.name }}"
    )
    span.item-name {{ dir.attrs.name }}
  //- This part is ng-included here to get around an Angular compiling issue when recursively
      using directives.  Without this, angular will just blow the stack and use all of your
      processor
  ul(
    ng-if = "dir.contents.models.length"
    ng-include = "'viewFileTreeDirItem'"
  )