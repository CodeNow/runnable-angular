.popover.bottom.popover-dns-mappings(
  ng-class = "{'in': active}"
  ng-style = "popoverStyle.getStyle()"
)
  //- arrow is white if loading or no dns mappings
  .arrow(
    ng-class = "{\
      'gray': $root.isLoaded.dns && DCC.filteredDependencies.length > 0,\
      'white': !$root.isLoaded.dns || DCC.filteredDependencies.length === 0\
    }"
  )

  animated-panel-container.popover-views
    animated-panel(
      default = "true"
      name = "dnsOverview"
    )
      .popover-view(
        ng-style = "!$root.isLoaded.dns && {'display': 'block'}"
      )
        //- only show the header if not loading and not empty
        .popover-header.load(
          ng-if = "$root.isLoaded.dns && DCC.filteredDependencies.length !== 0"
        )
          .fade(
            ng-class = "{'in': isActivePanel()}"
          ) DNS Mappings

        //- spinner when loading
        .spinner-wrapper.spinner-sm.spinner-gray.spinner-center.in(
          ng-if = "!$root.isLoaded.dns"
          ng-include = "'spinner'"
        )

        //- empty state if not loading and empty
        .popover-content(
          ng-if = "$root.isLoaded.dns && DCC.filteredDependencies.length === 0"
        )
          p.p.empty.text-center.fade-in DNS Mappings are created with elastic hostnames in Environment Variables or Find & Replace.&#32;
            a.link(
              href = "https://runnable.zendesk.com/hc/en-us/articles/204528909-What-is-an-Elastic-Hostname"
              target = "_blank"
            ) Learn more
            | .

        //- begin dns mappings
        .popover-content.load(
          ng-if = "isActivePanel() && DCC.filteredDependencies.length !== 0"
        )

          //- list of DNS mappings
          ul.list.popover-list
            li.list-item.popover-list-item.tr.multi-line.clearfix.tr-dns(
              ng-click = "DCC.editDependency(dependency); goToPanel('dnsList');"
              ng-if = "$root.isLoaded.dns"
              ng-repeat = "dependency in DCC.filteredDependencies"
            )
              .cell.clearfix(
                title = "{{dependency.instance.getRepoName()}}"
              )
                .text-overflow {{dependency.instance.getRepoName()}}
                small.small.text-overflow(
                  title = "{{dependency.instance.getElasticHostname()}}"
                ) {{dependency.instance.getElasticHostname()}}

              // If not isolated remove .center
              .cell.clearfix.center(
                ng-class = "{'fade-in': dependency === DCC.lastModifiedDNS}"
                title = "{{dependency.instance.getBranchName()}}"
              )
                .text-overflow
                  status-icon(
                    instance = "dependency.instance"
                  )
                  span.span(
                    title = "{{dependency.instance.getBranchName()}}"
                  ) {{dependency.instance.getBranchName()}}


                //// Isolated if looking at a staging branch of the name of the initial branch
                //small.small
                //  .btn.btn-xxs.btn-badge.gray.text-overflow Isolated

              //- inline for svg animation
              svg.iconnables.icons-check.float-right(
                ng-if = "dependency === DCC.lastModifiedDNS"
                viewbox = '0 0 14.5 10'
              )
                path.path(
                  d = 'M1,4.5L5.5,9l8-8'
                  fill = 'none',
                  stroke = '#3ccb5a',
                  stroke-linecap = 'round',
                  stroke-linejoin = 'round',
                  stroke-miterlimit = '10',
                  stroke-width = '2',
                )

              svg.iconnables.icons-arrow-forward.float-right(
                ng-class = "{'in': dependency === DCC.lastModifiedDNS}"
              )
                use(
                  xlink:href = "#icons-arrow-down"
                )

    animated-panel(
      name = "dnsList"
    )
      //- view for changing a dns mapping
      .popover-view
        .popover-header
          svg.btn.btn-sm.iconnables.icons-arrow-backward.fade(
            ng-class = "{'in': isActivePanel()}"
            ng-click = "goToPanel('dnsOverview', 'back');"
          )
            use(
              xlink:href = "#icons-arrow-down"
            )
          .fade(
            ng-class = "{'in': isActivePanel()}"
          ) {{DCC.modifyingDNS.current.instance.getRepoName()}} Containers

        .popover-content.fade(
          ng-class = "{'in': isActivePanel()}"
        )

          //- spinner when loading
          .spinner-wrapper.spinner-sm.spinner-gray.spinner-center.in(
            ng-if = "!$root.isLoaded.dnsDepData"
            ng-include = "'spinner'"
          )

          //- organization container list
          ul.list.popover-list.list-branches(
            ng-if = "$root.isLoaded.dnsDepData"
          )
            //li.list-item.popover-list-item.small.disabled anton-jul8â€™s Containers
            li.list-item.popover-list-item.text-overflow(
              ng-class = "{'no-touching': instance === DCC.modifyingDNS.current.instance}"
              ng-click = "DCC.selectInstance(instance); goToPanel('dnsOverview', 'back');"
              ng-repeat = "instance in DCC.modifyingDNS.options"
              title = "{{instance.getBranchName()}}"
            )

              status-icon(
                instance = "instance"
              )
              span.text-overflow {{instance.getBranchName()}}

              //- if branch is isolated
              //- don't show this when loading
              .btn.btn-xxs.btn-badge.gray(
                ng-if = "instance.attrs.isolated"
              ) Isolated

              //- when currently selected
              //- don't show this when loading
              svg.iconnables.icons-fat-check.float-right(
                ng-if = "instance === DCC.modifyingDNS.current.instance"
              )
                use(
                  xlink:href = "#icons-fat-check"
                )
            //li.divider
            //li.list-item.popover-list-item.small.disabled Other Containers