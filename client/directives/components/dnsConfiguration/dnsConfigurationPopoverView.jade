.popover.bottom.popover-dns-mappings(
  ng-class = "{'in': active}"
  ng-style = "popoverStyle.getStyle()"
)
  //- arrow is white if loading or no dns mappings
  .arrow(
    ng-class = "{\
      'gray': $root.isLoaded.dns && DCC.filteredDependencies.length > 0,\
      'white': !$root.isLoaded.dns || DCC.filteredDependencies.length === 0\
    }"
  )

  animated-panel-container.popover-views
    animated-panel(
      default = "true"
      name = "dnsOverview"
    )
      .popover-view(
        ng-style = "!$root.isLoaded.dns && {'display': 'block'}"
      )
        //- only show the header if not loading and not empty
        .popover-header.load(
          ng-if = "$root.isLoaded.dns && DCC.filteredDependencies.length !== 0"
        )
          .fade(
            ng-class = "{'in': isActivePanel()}"
          ) Connections

        //- spinner when loading
        .spinner-wrapper.spinner-sm.spinner-gray.spinner-center.in(
          ng-if = "!$root.isLoaded.dns"
          ng-include = "'spinner'"
        )

        //- empty state if not loading and empty
        .popover-content(
          ng-if = "$root.isLoaded.dns && DCC.filteredDependencies.length === 0"
        )

        //- begin dns mappings
        .popover-content

          //- repository containers
          ul.list.popover-list.list-repository-containers(
            ng-if = "isActivePanel() && DCC.filteredDependencies.length !== 0"
          )

            li.list-item.popover-list-item.small.disabled(
              ng-if = "$root.featureFlags.serviceContainersInConnections"
            ) Repository Containers

            li.list-item.popover-list-item.grid-block(
              ng-click = "DCC.editDependency(dependency); goToPanel('dnsList');"
              ng-if = "$root.isLoaded.dns && !dependency.instance.destroyed"
              ng-repeat = "dependency in DCC.filteredDependencies"
            )
              .text-gray.grid-block.vertical.grow.justify-center
                .text-overflow.strong(
                  title = "{{dependency.instance.getRepoName()}}"
                ) {{dependency.instance.getRepoName()}}
                small.small.text-overflow(
                  title = "{{dependency.instance.getElasticHostname()}}"
                ) {{dependency.instance.getElasticHostname()}}
              .grid-block.shrink.vertical.justify-center.dns-arrow â†’
              .grid-block.grow.vertical.justify-center.align-start(
                ng-class = "{'fade-in': dependency === DCC.lastModifiedDNS}"
              )
                .text-overflow
                  status-icon(
                    instance = "dependency.instance"
                  )
                  span.span.strong(
                    title = "{{dependency.instance.getBranchName()}}"
                  ) {{dependency.instance.getBranchName()}}

                //- Show if the container is the parent of an isolated group
                //- btn.btn-xxs.btn-badge.gray.grid-content.shrink Isolated

                //- Show if the container is a child in an isolated group
                    Replace 'branch-name' with the branch name of the parent in the isolated group
                //- .btn.btn-xxs.btn-badge.gray.grid-content.shrink branch-name

              //- inline for svg animation
              svg.iconnables.icons-check(
                ng-if = "dependency === DCC.lastModifiedDNS"
                viewbox = '0 0 14.5 10'
              )
                path.path(
                  d = 'M1,4.5L5.5,9l8-8'
                  fill = 'none',
                  stroke = '#3ccb5a',
                  stroke-linecap = 'round',
                  stroke-linejoin = 'round',
                  stroke-miterlimit = '10',
                  stroke-width = '2',
                )
              svg.iconnables.icons-arrow-forward(
                ng-class = "{'in': dependency === DCC.lastModifiedDNS}"
              )
                use(
                  xlink:href = "#icons-arrow-down"
                )

          //- service containers
          ul.list.popover-list(
            ng-if = "isActivePanel() && DCC.filteredDependencies.length !== 0 && $root.featureFlags.serviceContainersInConnections"
          )
            li.list-item.popover-list-item.small.disabled Service Containers
            li.list-item.popover-list-item.disabled.grid-block.vertical.align-start
              .text-overflow
                .icons-status.green
                span.span.strong MongoDB
              //- Show if the container is a child in an isolated group
              //- Replace 'branch-name' with the branch name of the parent in the isolated group
              .btn.btn-xxs.btn-badge.gray.grid-content.shrink branch-name

          .popover-footer.text-center.text-gray.small(
            ng-if = "!$root.featureFlags.connections"
            ng-class = "{'empty': !(isActivePanel() && DCC.filteredDependencies.length !== 0)}"
          ) Connect to containers by using their URLs in Environment Variables or Find & Replace.

          .popover-footer.text-center.text-gray.small(
            ng-if = "$root.featureFlags.connections"
            ng-class = "{'empty': !(isActivePanel() && DCC.filteredDependencies.length !== 0)}"
          ) Connect to containers by using their URLs in&#32;
            //- link directly to enviroment variables tool
            a.link Environment Variables
            | &#32;or&#32;
            //- link directly to find & replace tool
            a.link Find & Replace
            | .

    animated-panel(
      name = "dnsList"
    )
      //- view for changing a dns mapping
      .popover-view
        .popover-header
          svg.btn.btn-sm.iconnables.icons-arrow-backward.fade(
            ng-class = "{'in': isActivePanel()}"
            ng-click = "goToPanel('dnsOverview', 'back');"
          )
            use(
              xlink:href = "#icons-arrow-down"
            )
          .fade(
            ng-class = "{'in': isActivePanel()}"
          ) {{DCC.modifyingDNS.current.instance.getRepoName()}} Containers

        .popover-content.fade(
          ng-class = "{'in': isActivePanel()}"
        )

          //- spinner when loading
          .spinner-wrapper.spinner-sm.spinner-gray.spinner-center.in(
            ng-if = "!$root.isLoaded.dnsDepData"
            ng-include = "'spinner'"
          )

          //- list of containers that can be connected to
          ul.list.popover-list(
            ng-if = "$root.isLoaded.dnsDepData"
          )
            li.list-item.popover-list-item.small.disabled Select a branch to connect to

            //- If modifying connections for a container that is part of an isolated group,
                the relevant container within that group should appear at the top of the list
            li.list-item.popover-list-item.text-overflow.grid-block.align-center(
              ng-if = "$root.featureFlags.serviceContainersInConnections"
            )
              .icons-status.green
              span.strong.text-overflow.grid-content.grow master

              //- Show if the container is the parent in an isolated group
                  Don't show this when loading
              //- .btn.btn-xxs.btn-badge.gray.grid-content.shrink Isolated

              //- Show if the container is a child in an isolated group
                  Replace 'branch-name' with the branch name of the parent in the isolated group
                  Don't show this when loading
              .btn.btn-xxs.btn-badge.gray.grid-content.shrink branch-name

              //- When currently selected
                  Don't show this when loading
              //- svg.iconnables.icons-fat-check
              //-   use(
              //-     xlink:href = "#icons-fat-check"
              //-   )

            li.list-item.popover-list-item.text-overflow.grid-block.align-center(
              ng-class = "{'no-touching': instance === DCC.modifyingDNS.current.instance}"
              ng-click = "DCC.selectInstance(instance); goToPanel('dnsOverview', 'back');"
              ng-repeat = "instance in DCC.modifyingDNS.options"
              title = "{{instance.getBranchName()}}"
            )

              status-icon(
                instance = "instance"
              )
              span.strong.text-overflow.grid-content.grow(
                title = "{{instance.getBranchName()}}"
              ) {{instance.getBranchName()}}

              //- Show if the container is the parent of an isolated group
                  Don't show this when loading
              .btn.btn-xxs.btn-badge.gray.grid-content.shrink(
                ng-if = "$root.featureFlags.isolationUI && instance.attrs.isolated"
              ) Isolated

              //- When currently selected
                  Don't show this when loading
              svg.iconnables.icons-fat-check(
                ng-if = "instance === DCC.modifyingDNS.current.instance"
              )
                use(
                  xlink:href = "#icons-fat-check"
                )