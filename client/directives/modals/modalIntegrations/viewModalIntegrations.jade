nav.modal-navbar
  ul.list
    li.list-item.small Organizations
    //- .active on current org
    li.list-item.text-overflow(
      ng-class = "{active: data.user === data.modalActiveAccount }"
      ng-click = "actions.setActive(data.user)"
    )
      img.gravatar(
        height = "18"
        ng-src = "{{ data.user.gravitar() }}"
        width = "18"
      )
      | {{ data.user.oauthName() }}
    li.list-item.text-overflow(
      ng-class = "{active: org === data.modalActiveAccount}"
      ng-click = "actions.setActive(org)"
      ng-repeat = "org in data.orgs.models"
    )
      img.gravatar(
        height = "18"
        ng-src = "{{ org.gravitar() }}"
        width = "18"
      )
      | {{ org.oauthName() }}
main.modal-body
  form.form.clearfix(
    name = "slackForm"
  )
    div.col
      img(
        src = "/build/images/logos/logo-slack.svg"
      )
    div.col
      //- .ng-invalid when the user submits form with empty inputs
      //- .ng-valid when the user submits form with valid inputs
          'ng-invalid':\
          'ng-valid':\
      label.input-group.input-validate(
        ng-class = "{\
          focus: slackForm.slackWebHook.showFocus,\
          'ng-invalid': slackForm.slackWebHook.$invalid && !slackForm.slackWebHook.$pristine,\
          'ng-valid': slackForm.slackWebHook.$valid\
        }"
      )
        span.input-label WebHook URL
        input.input(
          autocomplete = "off"
          name = "slackWebHook"
          ng-blur = "slackForm.slackWebHook.showFocus = false"
          ng-focus = "slackForm.slackWebHook.showFocus = true"
          ng-model = "data.settings.notifications.slack.webhookUrl"
          required
          type = "url"
        )
      a.link-gray.link-reference(
        href = "//slack.com/services/new/incoming-webhook"
        target = "_blank"
      ) Get WebHook URL on Slack
      button.btn.green(
        ng-click = "actions.saveSlack()"
      ) Save
  hr.hr
  form.form.clearfix(
    name = "hipchatForm"
  )
    div.col
      img(
        src = "/build/images/logos/logo-hipchat.svg"
      )
    div.col
      label.input-group.input-validate(
      ng-class = "{\
          focus: hipchatForm.roomInput.showFocus,\
          'ng-invalid': hipchatForm.roomInput.$invalid && !hipchatForm.roomInput.$pristine,\
          'ng-valid': hipchatForm.roomInput.$valid\
        }"
      )
        span.input-label Room
        input.input(
          autocomplete = "off"
          ng-blur = "hipchatForm.roomInput.showFocus = false"
          ng-focus = "hipchatForm.roomInput.showFocus = true"
          name = "roomInput"
          ng-model = "data.settings.notifications.hipchat.roomId"
          required
        )
      label.input-group.input-validate(
        ng-class = "{\
            focus: hipchatForm.tokenInput.showFocus,\
            'ng-invalid': hipchatForm.tokenInput.$invalid && !hipchatForm.tokenInput.$pristine,\
            'ng-valid': hipchatForm.tokenInput.$valid\
          }"
      )
        span.input-label Token
        input.input(
          autocomplete = "off"
          ng-blur = "hipchatForm.tokenInput.showFocus = false"
          ng-focus = "hipchatForm.tokenInput.showFocus = true"
          name = "tokenInput"
          ng-model = "data.settings.notifications.hipchat.authToken"
          required
        )
      a.link-gray.link-reference(
        href = "//hipchat.com/admin/api"
        target = "_blank"
      ) Create a token on Hipchat
      button.btn.green(
        ng-click = "actions.saveHipChat()"
      ) Save
  footer.modal-footer
    button.btn.white(
      ng-click = "defaultActions.cancel()"
      type = "button"
    ) Done
