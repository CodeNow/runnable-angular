.modal-dialog.modal-environment(
  ng-class = "{'show-sidebar': data.toggleSidebar}"
  ng-click = "$event.stopPropagation()"
)
  .modal-container
    header.modal-header
      h1.modal-heading Edit Environment
      //- 0.3 SAN-436
        - to do:
        - do not show if there are no boxes with exposed ports to link
      button.btn.btn-icon.white(
        ng-class = "{active: data.toggleSidebar}"
        ng-click = "data.toggleSidebar = !data.toggleSidebar"
        tooltip = "Toggle List of Boxes"
        tooltip-options = "{\"class\":\"bottom\",\"left\":11,\"top\":30}"
        type = "button"
      )
        svg.iconnables.icons-sidebar
          use(
            xlink:href = "#icons-sidebar"
          )
    //- guide text should only appear once until dismissed
    .guide.guide-no-help.blue(
      ng-if = '!data.hideGuideHelpEnvModal'
    )
      p.guide-text Environmental files are good at protecting our fires from trees. Use it for linking boxes or setting up environment variables.
      button.btn.blue.btn-xs(
        ng-click = "onChangeHideGuideEnv()"
      )
        svg.iconnables.icons-close
          use(
            xlink:href = "#icons-close"
          )
    main.modal-body
      //- If the stateModel has an env (even empty), then the envs have been modified, and
        - we should display them
      env-vars(
        state-model = "tempModel"
        current-model = "stateModel.env ? stateModel : currentModel"
        validation = "validation"
      )

    footer.modal-footer
      //- 0.3 SAN-436
        - to do:
        - toggle b/t .orange Rebuild and .green Save if on instance vs instanceEdit
      button.green(
        ng-if = "data.showRebuild"
        ng-click = "actions.rebuild(tempModel); defaultActions.cancel()"
        ng-disabled = "!validation.valid"
        type = "button"
      ) Save and Restart
      button.green(
        ng-if = "!data.showRebuild"
        ng-click = "defaultActions.save(tempModel, ['env'], defaultActions.cancel)"
        ng-disabled = "!validation.valid"
        type = "button"
      ) Save
      button.white(
        ng-click = "defaultActions.cancel()"
        type = "button"
      ) Go Back
  //- if no boxes with exposed ports (empty state)
  aside.modal-sidebar.boxes(
    ng-if = "!(data.instances.models | instancesWithOpenPorts:data.instance).length"
  )
    //- Empty State
    p.demo-sidebar-hint This text should explain what linking is and why it's useful.
    p.demo-sidebar-hint This text should explain how #{''}
      b.btn.btn-xxs.gray(
        tooltip = "The EXPOSE instructions informs Docker that the container will listen on the specified network ports at runtime. Docker uses this information to interconnect containers using links. Note that EXPOSE only works for inter-container links. It doesn't make ports accessible from the host.[1]"
        tooltip-options = "{\"class\":\"bottom tooltip-definition\",\"left\":6,\"top\":21}"
      ) EXPOSE
      | #{''} is used to link boxes.
  //- if boxes with exposed ports
  aside.modal-sidebar.boxes(
    ng-if = "(data.instances.models | instancesWithOpenPorts:data.instance).length"
  )
    h2.sub-header
      span.sub-header-text Boxes
    ul.box-group
      //- 0.3 SAN-436
        - to do:
        - boxes should appear in the same order as they appear on the navbar
        - do not show boxes with no exposed ports
        - clicks on b.btn should paste "$ENTER_ENV_VAR={{url}}+':'+{{port}}" (with specified port) into the last cursor position in the env file
      li.box-group-item.expanded(
        ng-repeat = "otherInstance in data.instances.models | \
          instancesWithOpenPorts:data.instance"
      )
        .text-overflow {{ otherInstance.attrs.name }}
        button.btn.btn-xs.gray(
          ng-repeat = "url in otherInstance.containers.models[0].urls()"
          ng-click = "pasteLinkedInstance(url)"
          tooltip = "Link to: {{ url }}"
          tooltip-options = "{\"class\":\"bottom\",\"left\":11,\"top\":21}"
        ) {{url | filterCleanPorts}}
