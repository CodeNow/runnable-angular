// utility
%clearfix,
.clearfix {

  &::before,
  &::after {
    content: '';
    display: table;
  }

  &::after {
    clear: both;
  }
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.float-right {
  float: right;
}

.float-left {
  float: left;
}

// padding-sm, etc.
@for $i from 1 to 8 {
  .padding-#{nth($size-list,$i)} {
    padding: nth($sizes,$i);
  }
}

// padding-top-sm, etc.
@for $i from 1 to 8 {
  @for $y from 1 to 8 {
    @media (max-width: #{nth($screen-sizes,$y)}) {
      .padding-#{nth($size-list,$i)}-#{nth($screen-size-list,$y)} {
        padding: nth($sizes,$i);
      }
    }
  }
}

// padding-sm-sm, etc.
@for $i from 1 to 8 {
  @for $x from 1 to 5 {
    .padding-#{nth($size-directions,$x)}-#{nth($size-list,$i)} {
      padding-#{nth($size-directions,$x)}: nth($sizes,$i);
    }
  }
}

// padding-top-sm-sm, etc.
@for $i from 1 to 8 {
  @for $y from 1 to 8 {
    @for $x from 1 to 5 {
      @media (max-width: #{nth($screen-sizes,$y)}) {
        .padding-#{nth($size-directions,$x)}-#{nth($size-list,$i)}-#{nth($screen-size-list,$y)} {
          padding-#{nth($size-directions,$x)}: nth($sizes,$i);
        }
      }
    }
  }
}

// margin-sm, etc.
@for $i from 1 to 8 {
  .margin-#{nth($size-list,$i)} {
    margin: nth($sizes,$i);
  }
}

// margin-top-sm, etc.
@for $i from 1 to 8 {
  @for $y from 1 to 8 {
    @media (max-width: #{nth($screen-sizes,$y)}) {
      .margin-#{nth($size-list,$i)}-#{nth($screen-size-list,$y)} {
        margin: nth($sizes,$i);
      }
    }
  }
}

// margin-sm-sm, etc.
@for $i from 1 to 8 {
  @for $x from 1 to 5 {
    .margin-#{nth($size-directions,$x)}-#{nth($size-list,$i)} {
      margin-#{nth($size-directions,$x)}: nth($sizes,$i);
    }
  }
}

// margin-top-sm-sm, etc.
@for $i from 1 to 8 {
  @for $y from 1 to 8 {
    @for $x from 1 to 5 {
      @media (max-width: #{nth($screen-sizes,$y)}) {
        .margin-#{nth($size-directions,$x)}-#{nth($size-list,$i)}-#{nth($screen-size-list,$y)} {
          margin-#{nth($size-directions,$x)}: nth($sizes,$i);
        }
      }
    }
  }
}

.hidden {
  visibility: hidden;
}

.visible {
  visibility: visible;
}

.hide {
  display: none;
}

.show {
  display: flex;
}

.popover,
.notification {

  &.below-modals {
    z-index: $z-modal-backdrop - 1;
  }
}

// if .disabled communicates to the user that an element is not available to them,
// .no-touching 'disables' an element and DOES NOT communicate
.no-touching,
%no-touching {
  // scss-lint:disable ImportantRule
  pointer-events: none !important;
  // scss-lint:enable ImportantRule
}
