.table {
  background: $white;
  border: 1px solid $gray-lighter;
  border-radius: $input-border-radius;

  // space out tables
  + .table {
    margin-top: 9px;
  }
}

// diff
.table-diff {

  &:last-child,
  &:only-child {
    margin-bottom: 9px;
  }

  .thead {
    border-bottom: 1px solid $gray-lighter;

    &:only-child {
      border-bottom: 0;
    }
  }

  // cell line number
  .cell-line {
    background: $white;
    border-right: 1px solid $gray-lighter;
    flex: 0 0 50px;
    text-align: right;
  }

  .tr:last-child .cell-line {
    border-bottom-left-radius: $input-border-radius;
  }

  .tr-gap {
    background: rgba($blue,.05);

    &:last-child .cell-line {
      border-radius: 0;
    }

    .cell-line {
      background: rgba($blue,.05);
    }
  }

  .cell {
    height: 24px;
    line-height: 24px;
    overflow: hidden;
  }

  .link {
    margin-right: 9px;
    overflow-x: auto;
    white-space: nowrap;
  }

  // diff colors
  .tr-deletion {
    background: $red-lighter;
  }

  .tr-addition {
    background: $green-lighter;
  }

  // extra padding-bottom is weird when colored
  .tr-deletion,
  .tr-addition,
  .tr-gap {

    &:last-child {
      padding-bottom: 0;
    }
  }

  // checkbox
  .input-checkbox {
    margin: 0 12px 0 -2px;
  }
}

// merge tables
.table-merge {
  border-radius: $input-border-radius $input-border-radius 0 0;

  + .table-merge {
    border-radius: 0 0 $input-border-radius $input-border-radius;
    border-top: 0;
    margin-top: 0;

    .thead {
      border-radius: 0;
    }

    .tr:not(.thead) {

      &:first-child {
        border-radius: 0;
        padding-top: 0;
      }

      &:last-child {
        border-radius: 0 0 $input-border-radius $input-border-radius;
      }
    }
  }

  .tr:last-child:not(:only-child) {
    border-radius: 0;
    padding-bottom: 0;
  }
}

// table details
.table-details {
  color: $gray;
  display: block;
  margin: 15px 0 6px;
}

// layout
// always use .clearfix with .tr:
// .tr.clearfix
.tr {
  background: $white;
  display: flex;

  &:first-child {
    border-radius: $input-border-radius $input-border-radius 0 0;
    padding-top: 3px;

    &.tr-addition,
    &.tr-deletion {
      border-radius: 0;
      padding-top: 0;
    }
  }

  &:last-child {
    border-radius: 0 0 $input-border-radius $input-border-radius;
    padding-bottom: 3px;

    &.tr-addition,
    &.tr-deletion {
      padding-bottom: 0;
    }
  }

  &:only-child {
    border-radius: $input-border-radius;
    padding: 3px 0;
  }

  // element that's left behind
  &.disabled {
    cursor: not-allowed;
  }

  + .tr {
    border-top: 1px solid $gray-lighter;

    .table-diff &,
    &.tr-addition,
    &.tr-deletion {
      border-top: 0;
    }
  }

  // do not add border if ng-hide
  &.ng-hide + .tr {
    border-top: 0;
  }
}

// table row header usage:
// .tr.thead
.thead {
  background: $gray-lightest;
  font-size: 13px;
  font-weight: $weight-bold;

  &.divider {
    padding: 3px 0;
  }

  .cell {
    align-items: center;
    display: flex;
    height: 30px;
    justify-content: space-between;
    padding: 0 8px; // 9px - 1px border for alignment

    .btn-xs {
      flex: 0 0 auto;
      top: -1px;
    }
  }

  .btn-status {
    color: $gray;
    cursor: default;
    float: none;
    font-size: 13px;
    margin-left: 6px;
    top: 0;
  }
}

// tr that's clickable
.tr-action {
  cursor: pointer;
  position: relative; // for the dragging indicator
  user-select: none;

  &:hover {
    background: rgba($purple-lightest,.5);
  }

  &:active,
  &.active {
    background: rgba($purple-lightest,.75);
  }
}

// empty state
.tr-empty {
  color: $gray-light;
  text-align: center;

  .cell {
    height: 60px;
    line-height: 60px;
  }
}

.cell {
  flex: 1 1 50%;
  float: left;
  height: 36px;
  line-height: 35px;
  padding: 0 9px;

  &.monospace {
    font-size: 13px;
    letter-spacing: -.25px;
  }

  // cells with multiple lines
  .multi-line & {
    height: $input-md;
    line-height: 1.2;
    padding-top: 5px;

    &:last-child {

      .btn-xs {
        margin-top: 3px;
      }

      .btn-xxs {
        margin-top: 6px;
      }
    }
  }

  .small {
    color: $gray;
    display: block;
    font-size: 11px;
  }

  // if multiline rule
  .more {
    color: $gray-light;
    display: inline-block;
    margin-left: 6px;
  }
}

.cell-action {
  flex: 0 0 auto;

  &:first-child {
    cursor: grab;
    flex: 0 0 21px;
    max-width: 21px;
    padding: 0 3px 0 9px;

    &:active {
      cursor: grabbing;

      .icons-drag {
        color: $purple-light;
      }
    }
  }

  &.disabled {
    visibility: hidden;
  }

  // status icons
  .icons-alert,
  .icons-close,
  .icons-link {
    height: 36px;
    pointer-events: auto;
    width: 18px;
  }

  // alert icon
  .icons-alert {
    color: $orange;
  }

  // link icon
  .icons-link {
    color: $purple-light;
    width: 15px;
  }

  // close icon
  .icons-close {
    color: $gray-light;
    cursor: pointer;
    pointer-events: auto; // reset from .iconnables

    &:hover {
      color: $red;
    }

    &:active {
      color: $red-dark;
    }
  }

  // dragging icon
  .icons-drag {
    color: $gray-lighter;
    height: 100%;
    opacity: .3;
    width: 9px;
  }

  // actions
  > .btn .icons-overflow {
    top: -$input-border;
    width: 15px;
  }
}

.cell-type {
  flex: 0 0 150px;

  .multi-line & {
    color: $gray;
    line-height: $input-md;
    padding-top: 0;
  }

  .iconnables {
    float: left;
    height: 34px;
    margin-right: 6px;
    width: 18px;

    .multi-line & {
      height: 44px;
    }
  }
}

.cell-checkbox {
  cursor: pointer;
}

.table-footer {
  margin-top: 4px;

  .green {
    float: right;
  }
}

// drag and drop styles
.table-drag-drop {
  position: relative; // keeps width of DnD placeholder
}

// disable linting so we can keep table-drag-drop styles together
// scss-lint:disable MergeableSelector
.thead + .table-drag-drop {
  border-top: 1px solid $gray-lighter; // border when there's a header
}
// scss-lint:enable MergeableSelector
