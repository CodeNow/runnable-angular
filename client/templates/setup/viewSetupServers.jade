.setup-header
  h1.h1 Configure Your Servers
  p.p Each repository will be created as its own server.
    br
    | We&rsquo;ve automagically filled out the server details for you.

.setup-body(
  ng-init = "data.cardLoading = true"
)
  //- card #1
  //- loading state
  .card.card-loading(
    ng-click = "data.cardLoading = false"
    ng-if = "data.cardLoading"
  )
    .spinner-wrapper.spinner-md.spinner-purple.in(
      ng-include = "'spinner'"
    )
    | Configuring
  .card.load(
    ng-class = "{active: popoverConfigureServer.data.show}"
    ng-if = "!data.cardLoading"
  )
    //- svg.iconnables.icons-gear(
    //-   ng-if = "!data.cardLoading"
    //-   toggle-pop-over
    //-   toggle-pop-over-model = "popoverConfigureServer.data.show"
    //- )
    //-   use(
    //-     xlink:href = "#icons-gear"
    //-   )
    //-   pop-over(
    //-     actions = "popoverConfigureServer.actions"
    //-     data = "popoverConfigureServer.data"
    //-     popover-options = "{\"left\":0,\"top\":0}"
    //-     template = "viewPopoverConfigureServer"
    //-   )
    //- loading
    h2.card-header
      svg.iconnables.icons-server
        use(
          xlink:href = "#icons-server"
        )
      | api
    .card-body.clearfix
      ul.list.list-col.small
        li.list-item Language
        li.list-item Ports
        li.list-item Command
      ul.list.list-col
        li.list-item.monospace.text-overflow
          svg.iconnables.icons-nodejs
            use(
              xlink:href = "#icons-nodejs"
            )
          | v0.10.28
        li.list-item.monospace.text-overflow 80, 8000, 8080, 3000
        li.list-item.monospace.text-overflow npm start
    ul.list.list-col.well.gray
      li.list-item.small Recommended Servers
      li.list-item MongoDB
        button.btn.btn-xxs.green Add
      li.list-item Redis
        button.btn.btn-xxs.green Add

  //- card #2
  //- loading state
  .card.card-loading(
    ng-click = "data.cardLoading = false"
    ng-if = "data.cardLoading"
  )
    .spinner-wrapper.spinner-md.spinner-purple.in(
      ng-include = "'spinner'"
    )
    | Configuring
  .card.load(
    ng-if = "!data.cardLoading"
  )
    //- svg.iconnables.icons-gear(
    //-   ng-if = "!data.cardLoading"
    //- )
    //-   use(
    //-     xlink:href = "#icons-gear"
    //-   )
    h2.card-header.load(
      ng-if = "!data.cardLoading"
    )
      svg.iconnables.icons-server(
      )
        use(
          xlink:href = "#icons-server"
        )
      | runnable-angular
    .card-body.clearfix
      ul.list.list-col.small
        li.list-item Language
        li.list-item Ports
        li.list-item Command
      ul.list.list-col.monospace
        li.list-item.monospace.text-overflow
          svg.iconnables.icons-nodejs
            use(
              xlink:href = "#icons-nodejs"
            )
          | v0.10.35
        li.list-item.monospace.text-overflow 80, 8000, 8080, 3000
        li.list-item.monospace.text-overflow npm start
    ul.list.list-col.well.gray
      li.list-item.small Recommended Servers
      li.list-item MongoDB
        button.btn.btn-xxs.green Add
      li.list-item Redis
        button.btn.btn-xxs.green Add

  //- .card.card-template(
  //-   ng-if = "!data.addingServer"
  //- )
    h2.card-header
      svg.iconnables.icons-add
        use(
          xlink:href = "#icons-add"
        )
    .card-body.clearfix
      button.btn.btn-sm.green(
        ng-click = "data.addingServer = true"
      ) New Server
  //- .card.card-template.active(
  //-   ng-if = "data.addingServer"
  //- )
    h2.card-header New Server
    .card-body
    .card-footer
      button.btn.btn-xs.gray(
        ng-click = "data.addingServer = false"
      ) Cancel

.setup-footer
  button.btn.btn-sm.white(
    ng-click = "state.step = 1"
  ) Back
  button.btn.btn-sm.green(
    ng-click = "state.step = 3"
  ) Setup Server(s)