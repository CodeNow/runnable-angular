header(ng-class = "dataProjectLayout.actions.getInClass()")
  .startup-container
    a#logo(href = "/")
      svg
        use(xlink:href = "#runnable-logo")
    button.white#user(
      ng-class="{'active': dataProjectLayout.data.showChangeAccount}"
      ng-click = "dataProjectLayout.data.showChangeAccount = !dataProjectLayout.data.showChangeAccount"
      type = "button"
    )
      img(
        height = "19"
        ng-src = "{{ dataProjectLayout.actions.getEntityGravatar(dataProjectLayout.data.newProjectOwner) }}"
        width = "19"
      )
      | {{ dataProjectLayout.actions.getEntityName(dataProjectLayout.data.newProjectOwner) }}
      svg.iconnables.icons-arrow-down
        use(xlink:href = "#icons-arrow-down")
    ul.accounts.btn-group-vertical
      li.btn.white(
        ng-click = "dataProjectLayout.actions.selectProjectOwner(dataApp.user)"
        ng-if = "dataApp.user !== dataProjectLayout.data.newProjectOwner"
      )
        a
          img(
            height = "19"
            ng-src = "{{ dataApp.user.attrs.gravatar }}"
            width = "19"
          )
          | {{ dataApp.user.attrs.accounts.github.username }}
      li.btn.white(
        ng-click = "dataProjectLayout.actions.selectProjectOwner(org)"
        ng-if = "org !== dataProjectLayout.data.newProjectOwner"
        ng-repeat = "org in dataProjectLayout.data.orgs"
      )
        a
          img(
            height = "19"
            ng-src = "{{ org.avatar_url }}"
            width = "19"
          )
          | {{ org.login }}
      li.btn.white
        a(href = "{{ dataApp.logoutURL }}") Log Out
    form(name = "dataProjectLayout.data.newProjectNameForm")
      //- this field is optional. if blank, name the app for them: 'My App'
      //- should not trigger on focus, but on the error that causes the validation error
      input.form-control.form-validate(
        ng-focus = "dataProjectLayout.actions.showRules = true"
        ng-model = "dataProjectLayout.data.newProjectName"
        ng-pattern = "/^[A-Za-z0-9_-]+$/"
        placeholder = "Application Name"
      )
      //- if invalid character is entered
      .the-rules(ng-class = "{'in': dataProjectLayout.data.newProjectNameForm.$invalid}") We accept #{''}
        b A-Z
        b a-z
        b 0-9
        b _
        b -
      //- if the name is taken
      //- .the-rules(ng-class = "{in: dataProjectLayout.actions.showRules}") That's a pretty name, but it's taken.
      button.orange.btn-block(ng-click = "dataProjectLayout.actions.createNewProject()") Create App
  .scroll-container
    h3 APPLICATIONS
      button.btn-icon(
        ng-click = "dataProjectLayout.actions.stateToNewProject"
        type = "button"
      )
        svg.iconnables.icons-add
          use(xlink:href = "#icons-add")
    ul#apps.btn-group-vertical
      li.btn(
        ng-repeat = "project in dataProjectLayout.data.projects.models"
        ng-class = "dataProjectLayout.actions.getProjectLiClass(project)"
        ng-click = "dataProjectLayout.actions.stateToBuildList(project, $event);"
      )
        a.white
          svg.iconnables.icons-arrow-down
            use(xlink:href = "#icons-arrow-down")
          | {{ project.attrs.name }}
        ul.config-list(ng-repeat = "environment in project.attrs.environments")
          li.active(ng-click = "dataProjectLayout.actions.stateToBuildList(project, environment, $event)")
            a.white
              svg.iconnables.icons-recipe
                use(xlink:href = "#icons-recipe")
              | {{ environment.name }}
    h3 INSTANCES
    ul#instances.btn-group-vertical
      li.btn.white(
        ng-click = "dataProjectLayout.actions.stateToInstance(instance)"
        ng-repeat = "instance in dataProjectLayout.data.instances.models"
      )
        a {{ instance.attrs.name }}
        small {{ instance.buildUrl() }}
//- 2nd level views (build, buildList, instance, etc...)
main(ui-view)