header(
  ng-class = "dataProjectLayout.actions.getInClass()"
)
  .startup-container
    a.logo(href = "/")
      svg
        use(xlink:href = "#runnable-logo")
    button.switcher.btn(
      ng-class = "{active: dataProjectLayout.data.showChangeAccount}"
      ng-click = "dataProjectLayout.data.showChangeAccount = !dataProjectLayout.data.showChangeAccount"
      type = "button"
    )
      img.account-image(
        height = "19"
        ng-src = "{{ dataProjectLayout.actions.getEntityGravatar(dataProjectLayout.data.activeAccount) }}"
        width = "19"
      )
      span.project-name current-project
      span.name-switcher
        span.account-name {{ dataProjectLayout.actions.getEntityName(dataProjectLayout.data.activeAccount) }}
        a.btn.btn-icon.btn-add-project
          svg.iconnables.icons-add
            use(xlink:href = "#icons-add")
      svg.iconnables.icons-arrow-down
        use(xlink:href = "#icons-arrow-down")
    .accounts
      ul.account.btn-group-vertical.no-margin
        li.btn
          a.btn-link
            span.project-name api
        li.btn
          a.btn-link
            span.project-name runnable-angular
        li.btn
          a.btn-link
            span.project-name runnable-api-client
      ul.account.btn-group-vertical.no-margin.border-top(
        ng-repeat = "org in dataProjectLayout.data.orgs.models"
      )
        li.btn.account-info
          img.account-image.tooltip(
            alt = "{{ org.login }}"
            height = "19"
            ng-src = "{{ org.attrs.avatar_url }}"
            width = "19"
          )
          span.account-name {{ org.attrs.login }}
          button.btn-icon
            svg.iconnables.icons-add
              use(xlink:href = "#icons-add")
        li.btn
          span.project-name runnable-web
        li.btn
          span.project-name runnabot
    .no-margin.border-top.log-out(
      href = "{{ dataApp.logoutURL }}"
    )
      a.btn.btn-link Log Out
    form(name = "dataProjectLayout.data.newProjectNameForm")
      //- this field is optional. if blank, name the app for them: 'My App'
      //- should not trigger on focus, but on the error that causes the validation error
      input.form-control.form-validate(
        ng-focus = "dataProjectLayout.actions.showRules = true"
        ng-model = "dataProjectLayout.data.newProjectName"
        ng-pattern = "/^[A-Za-z0-9_-]+$/"
        placeholder = "Application Name"
        spellcheck = "false"
      )
      //- if invalid character is entered
      .the-rules(ng-class = "{'in': dataProjectLayout.data.newProjectNameForm.$invalid}") We accept #{''}
        b A-Z
        b a-z
        b 0-9
        b _
        b -
      //- if the name is taken
      //- .the-rules(ng-class = "{in: dataProjectLayout.actions.showRules}") That's a pretty name, but it's taken.
      button.orange.btn-block(ng-click = "dataProjectLayout.actions.createNewProject()") Create App
  .scroll-container
    h3 CONFIGS
      //- a.btn.btn-icon(
      //-   ng-click = "dataProjectLayout.actions.stateToNewProject()"
      //- )
      //-   svg.iconnables.icons-add
      //-     use(xlink:href = "#icons-add")
    ul.config-list.btn-group-vertical.no-margin
      //- apply class active if active
      li.btn.config
        a.btn-link
          svg.iconnables.icons-recipe
            use(xlink:href = "#icons-recipe")
          | Prod
      li.btn.config
        a.btn-link
          svg.iconnables.icons-recipe
            use(xlink:href = "#icons-recipe")
          | Staging
    h3 INSTANCES
    ul.instances.btn-group-vertical.no-margin
      li.btn(
        ng-click = "dataProjectLayout.actions.stateToInstance(instance)"
        ng-repeat = "instance in dataProjectLayout.data.instances.models"
      )
        a.btn-link {{ instance.attrs.name }}
        small.build-url {{ instance.buildUrl() }}
//- 2nd level views (build, buildList, instance, etc...)
main(ui-view)
  .spinner.lg
    .spinner-ring
