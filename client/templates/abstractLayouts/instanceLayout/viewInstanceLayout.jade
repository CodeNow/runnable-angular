//- sidebar for accounts and boxes
nav.sidebar.global-sidebar(
  ng-class = "{minimize: dataApp.data.minimizeNav}"
)
  //- accounts
  header.row.account-header
    ol.accounts-group(
      ng-class = "{in: dataInstanceLayout.data.showChangeAccount}"
      ng-click = "dataInstanceLayout.data.showChangeAccount = !dataInstanceLayout.data.showChangeAccount; \
        $event.stopPropagation()"
    )
      li.accounts-group-item
        a.account.load(
          ng-show = "dataInstanceLayout.data.activeAccount.gravitar()"
        )
          img.gravatar(
            height = "24"
            ng-src = "{{ dataInstanceLayout.data.activeAccount.gravitar() }}"
            width = "24"
          )
          span.account-name {{ dataInstanceLayout.data.activeAccount.oauthName() }}
          //- icons-arrow-down only for first account
          svg.iconnables.icons-arrow-down
            use(
              xlink:href = "#icons-arrow-down"
            )
      //- current user (if user is not active)
      li.accounts-group-item(
        ng-if = "dataApp.user !== dataInstanceLayout.data.activeAccount"
        ng-click = "$event.stopPropagation(); dataInstanceLayout.actions.selectActiveAccount(dataApp.user)"
      )
        a.account
          img.gravatar(
            height = "24"
            ng-src = "{{ dataApp.user.gravitar() }}"
            width = "24"
          )
          span.account-name {{ dataApp.user.oauthName() }}
      //- Orgs that are not the active account
      li.accounts-group-item(
        ng-click = "$event.stopPropagation(); dataInstanceLayout.actions.selectActiveAccount(org)"
        ng-if = "org !== dataInstanceLayout.data.activeAccount"
        ng-repeat = "org in dataInstanceLayout.data.orgs.models"
      )
        a.account
          img.gravatar(
            height = "24"
            ng-src = "{{ org.gravitar() }}"
            width = "24"
          )
          span.account-name {{ org.oauthName() }}

  //- INSTANCES
  section.row.boxes
    h2.sub-header
      span.sub-header-text Boxes
      a.btn.btn-sm.white.sub-header-action(
        href = "/new"
        ng-click = "dataInstanceLayout.actions.stateToNew()"
        tooltip = "New Box"
        tooltip-options = "{\"class\":\"bottom\",\"left\":6,\"top\":30}"
      )
        svg.iconnables.icons-add
          use(
            xlink:href = "#icons-add"
          )

    //- *
    //- LINKED NAV LAYOUT
    //- *

    //- 0.2 box-group layout (old):
    //- ul.box-group
    //-   //- apply .active for currently selected box
    //-   //- apply .running for a running box
    //-   li.box-group-item.load(
    //-     ng-class = "dataInstanceLayout.actions.getInstanceClasses(instance)"
    //-     ng-click = "dataInstanceLayout.actions.stateToInstance(instance)"
    //-     ng-repeat = "instance in dataInstanceLayout.data.instances.models | orderBy:'attrs.name'"
    //-     ng-show = "dataInstanceLayout.data.instances.models"
    //-   )
    //-     a.white.box(
    //-       tooltip = "{{ instance.attrs.name }}"
    //-       tooltip-options = "{\"class\":\"nav-tooltips right\",\"left\":31,\"top\":10}"
    //-     )
    //-       span.box-item-name {{ instance.attrs.name }}
    //-       //- alt text running container
    //-       span.icons-status(
    //-         title = "{{ dataInstanceLayout.actions.getInstanceAltTitle(instance) }}"
    //-       )

    //- 0.3 box-group layout (new):
    ul.box-group
      //- .active for current active box
      //- .runnning for running box
      //- if not .active
      li.box-group-item.white.load(
        ng-click = "dataInstanceLayout.actions.stateToInstance(instance)"
        ng-show = "dataInstanceLayout.data.instances.models"
        tooltip = "{{ instance.attrs.name }}"
        tooltip-options = "{\"class\":\"nav-tooltips right\",\"left\":31,\"top\":10}"
      )
        a.box-item-name Web-PRana
        span.icons-status(
          title = "{{ dataInstanceLayout.actions.getInstanceAltTitle(instance) }}"
        )
        //- boxes need to be listed in the order that they are dependent
        span.box-item-description(
          title = "api, mongo, apple"
        ) api, mongo
      li.box-group-item.white.load(
        ng-click = "dataInstanceLayout.actions.stateToInstance(instance)"
        ng-show = "dataInstanceLayout.data.instances.models"
        tooltip = "{{ instance.attrs.name }}"
        tooltip-options = "{\"class\":\"nav-tooltips right\",\"left\":31,\"top\":10}"
      )
        a.box-item-name API-Nefarious
        span.icons-status(
          title = "{{ dataInstanceLayout.actions.getInstanceAltTitle(instance) }}"
        )
        //- boxes need to be listed in the order that they are dependent
        span.box-item-description(
          title = "doobie, dobbie"
        ) doobie, dobbie
      li.box-group-item.white.load(
        ng-click = "dataInstanceLayout.actions.stateToInstance(instance)"
        ng-show = "dataInstanceLayout.data.instances.models"
        tooltip = "{{ instance.attrs.name }}"
        tooltip-options = "{\"class\":\"nav-tooltips right\",\"left\":31,\"top\":10}"
      )
        a.box-item-name API-APatel
        span.icons-status(
          title = "{{ dataInstanceLayout.actions.getInstanceAltTitle(instance) }}"
        )
        //- boxes need to be listed in the order that they are dependent
        span.box-item-description(
          title = "no, flex, zone"
        ) no, flex, zone

      //- if .active
      //- li.box-group-item.white.load.active(
      //-   ng-click = "dataInstanceLayout.actions.stateToInstance(instance)"
      //-   ng-show = "dataInstanceLayout.data.instances.models"
      //-   tooltip = "{{ instance.attrs.name }}"
      //-   tooltip-options = "{\"class\":\"nav-tooltips right\",\"left\":31,\"top\":10}"
      //- )
      //-   .white.box(
      //-     tooltip = "{{ instance.attrs.name }}"
      //-     tooltip-options = "{\"class\":\"nav-tooltips right\",\"left\":31,\"top\":10}"
      //-   )
      //-     h2.box-item-name API-YKumar
      //-     span.icons-status(
      //-       title = "{{ dataInstanceLayout.actions.getInstanceAltTitle(instance) }}"
      //-     )
      //-     .cluster-group
      //-       a.cluster-group-item api
      //-       a.cluster-group-item mongo
      //-       a.cluster-group-item walrus

  footer.row.global-footer
    a.btn.btn-sm.btn-icon.white.btn-logout(
      href = "{{ dataApp.logoutURL }}"
      title = "Log Out"
    )
      svg.iconnables.icons-exit
        use(
          xlink:href = "#icons-exit"
        )
    button.btn-sm.btn-icon.white.btn-minimize(
      ng-click = "dataApp.data.minimizeNav = !dataApp.data.minimizeNav"
      ng-class = "{active: dataApp.data.minimizeNav}"
      title = "Toggle Navigation"
    )
      svg.iconnables.icons-arrow-left
        use(
          xlink:href = "#icons-arrow-left"
        )

//- 2nd level views (boxInstnce, boxInstanceEdit...)
main.content(ui-view)

//- development info
div(
  ng-include = "'viewDevelopmentInfo'"
)

//- global spinner
.spinner-container(
  ng-class = "{in: dataApp.data.loading}"
)
  .spinner.lg
    .spinner-ring
