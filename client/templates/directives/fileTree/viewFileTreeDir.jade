li.folder(
  ng-class = "{ 'in': dir.state.open }"
)
  a(
    ng-click = "actions.closeOpenModals(); \
                dir.state.open = !dir.state.open; \
                $event.stopPropagation();"
    popover-file-explorer-menu
  )
    svg.iconnables.filetypes.icons-folder
      use(xlink:href = "#icons-folder")
    input.tree-input(
      ng-keyup = "($event.keyCode === 13) && dirItemData.actions.closeFolderNameInput();"
      ng-readonly = "!dirItemData.editFolderName"
      value = "{{ dir.attrs.name }}"
    )
    span.item-name {{ dir.attrs.name }}
  ul(
    ng-if = "dir.contents.models.length"
  )
    file-tree-dir(
      ng-repeat = "fs in dir.contents.models \
                   | isDir \
                   | orderBy:actions.normalizeMixedDataValue"
      dir = "fs"
      open = "fs.state.open"
      open-items = "openItems"
      read-only = "readOnly"
    )
    //- 'dirty' state checking only on instance page
    li(
      ng-repeat = "fs in dir.contents.models \
                   | isFile \
                   | orderBy:actions.normalizeMixedDataValue"
      ng-class = "{ \
          'active': fs.state.open, \
          'dirty': (dataApp.state.current.name === 'projects.instance' && \
                    fs.state.body !== fs.attrs.body) \
        }"
    )
      a(
        ng-click = "actions.closeOpenModals(); \
                    openItems.add(fs); \
                    $event.stopPropagation();"
        popover-file-explorer-item-menu
      )
        svg.iconnables.filetypes.icons-file
          use(xlink:href = "#icons-file")
        input.tree-input(
          name = "{{ fs.id() }}"
          ng-keyup = "($event.keyCode === 13) && fileItemData.actions.closeFileNameInput();"
          ng-readonly = "!fileItemData.editFileName"
          value = "{{ fs.attrs.name }}"
        ) {{ fs.attrs.name }}
        span.item-name {{ fs.attrs.name }}
