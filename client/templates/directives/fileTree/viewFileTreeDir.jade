li.folder(
  ng-class = "{ 'in': dir.state.open }"
)
  a(
    ng-click = "actions.closeOpenModals(); dir.state.open = !dir.state.open; $event.stopPropagation();"
    popover-file-explorer-menu
  )
    svg.iconnables.filetypes.icons-folder
      use(xlink:href = "#icons-folder")
    input.tree-input(
      ng-keyup = "($event.keyCode === 13) && dirItemData.actions.closeFolderNameInput();"
      ng-readonly = "!dirItemData.editFolderName"
      value = "{{ dir.id() }}"
    )
    span.item-name {{ dir.attrs.name }}
  ul(
    ng-if = "dir.contents.models.length"
  )
    file-tree-dir(
      ng-repeat = "fs in dir.contents.models | isDir"
      dir = "fs"
      open = "fs.state.open"
      read-only = "readOnly"
    )
    li(
      ng-repeat = "fs in dir.contents.models | isFile"
      ng-class = "{ 'active': fs.state.open }"
    )
      a(
        ng-click = "actions.closeOpenModals(); openItems.add(fs); $event.stopPropagation();"
        popover-file-explorer-item-menu
      )
        svg.iconnables.filetypes.icons-file
          use(xlink:href = "#icons-file")
        input.tree-input(
          ng-keyup = "($event.keyCode === 13) && fileItemData.actions.closeFileNameInput();"
          ng-readonly = "!fileItemData.editFileName"
          value = "{{ fs.attrs.name }}"
        )
        span.item-name {{ fs.attrs.name }}
