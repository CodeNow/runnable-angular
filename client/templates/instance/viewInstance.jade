nav.sub-header
  //- runnable_title
  h1.divided-header
    input.form-control.inline-edit(
      placeholder = "Instance Name"
      required
      spellcheck = "false"
      value = "{{ dataInstance.data.instance.attrs.name }}"
    )
    svg.iconnables.icons-edit
      use(xlink:href = "#icons-edit")
  section.main-controls
    .slide-left.slide-save.out(
      ng-class = "{out: !dataInstance.data.container.running() || dataInstance.data.loading}"
    )
      button.green(
        ng-click = "dataInstance.actions.saveChanges()"
        type = "button"
      ) Save Changes
      label.btn.btn-check(
        ng-class = "{out: !dataInstance.data.container.running() || dataInstance.data.loading}"
      )
        input.form-checkbox(
          checked
          ng-disabled = "!dataInstance.data.container.running()"
          ng-model = "dataInstance.data.restartOnSave"
          type = "checkbox"
        )
        | Restart instance on save.

section.sidebar
  ul.sidebar-ul.sidebar-info.load(
    ng-show = "dataInstance.data.instance.buildUrl()"
  )
    li.sidebar-li
      svg.iconnables.icons-back
        use(xlink:href = "#icons-back")
      | From #{''}
      a.link(
        ng-click = "dataInstance.actions.goToBuild()"
        title = "{{ dataInstance.data.instance.buildUrl() }}"
      ) {{ dataInstance.data.instance.buildUrl() }}
    li.sidebar-li(
      ng-if = "dataInstance.data.container.running()"
    )
      svg.iconnables.icons-duration
        use(xlink:href = "#icons-duration")
      time(
        datatime = "{{ dataInstance.data.container.attrs.inspect.State.StartedAt }}"
        title = "Launched on {{ dataInstance.data.container.attrs.inspect.State.StartedAt }}"
      ) Launched {{ dataInstance.data.container.attrs.inspect.State.StartedAt | timeAgo }}
    li.sidebar-li(
      ng-if = "!dataInstance.data.container.running()"
    )
      svg.iconnables.icons-duration
        use(xlink:href = "#icons-duration")
      time(
        datatime = "{{ dataInstance.data.container.attrs.inspect.State.FinishedAt }}"
        title = "Stopped on {{ dataInstance.data.container.attrs.inspect.State.FinishedAt }}"
      ) Stopped {{ dataInstance.data.container.attrs.inspect.State.FinishedAt | timeAgo }}
    li.sidebar-li(
      ng-if = "dataInstance.data.container.attrs.stoppedBy.username"
    )
      svg.iconnables.icons-untriggered
        use(xlink:href = "#icons-untriggered")
      | Stopped by #{''}
      a dataInstance.data.container.attrs.stoppedBy.username
  h3.sidebar-title.load(
    ng-show = "dataInstance.data.container.running() && !dataInstance.data.loading && dataInstance.data.container.urls().length"
  ) Exposed URLs
  ul.sidebar-ul.sidebar-urls.load(
    ng-show = "dataInstance.data.container.running() && !dataInstance.data.loading && dataInstance.data.container.urls().length"
  )
    li.sidebar-li
      input.form-control(
        readonly
        select-all
        value = "{{ dataInstance.data.container.urls()[0] }}"
      )
  h3.sidebar-title.load(
    ng-show = "dataInstance.data.instance.buildUrl()"
  ) Actions
  ul.sidebar-ul.load(
    ng-show = "dataInstance.data.instance.buildUrl()"
  )
    li.sidebar-action(
      ng-class = "{active: dataInstance.data.loading}"
      ng-if = "!dataInstance.data.container.running()"
    ) Restart Instance
      button.btn-sm.silver(
        ng-click = "dataInstance.actions.startInstance();"
        type = "button"
      )
        svg.iconnables.icons-start
          use(xlink:href = "#icons-start")
      .spinner
        .spinner-ring
    li.sidebar-action(
      ng-class = "{ \
        active: dataInstance.data.loading \
      }"
      ng-if = "dataInstance.data.container.running()"
    ) Stop Instance
      button.btn-sm.silver(
        ng-click = "dataInstance.actions.stopInstance();"
        type = "button"
      )
        svg.iconnables.icons-pause
          use(xlink:href = "#icons-pause")
      .spinner
        .spinner-ring
    li.sidebar-action Delete Instance
      button.btn-sm.silver(
        ng-click = "dataInstance.actions.destroyInstance()"
        type = "button"
      )
        svg.iconnables.icons-delete
          use(xlink:href = "#icons-delete")

//- code_editor
#editor.with-add-tab(
  ng-class = "{in: dataInstance.data.showExplorer && !dataInstance.data.loading, out: !dataInstance.data.container.running() || dataInstance.data.loading}"
)
  button#explorer-toggle.btn-icon(
    ng-click = "dataInstance.data.showExplorer = !dataInstance.data.showExplorer"
    type = "button"
  )
    svg.iconnables.icons-folder-open
      use(xlink:href = "#icons-folder-open")
  //- file_explorer
  aside#explorer
    #controls
      button.toggle-theme.tooltip(
        data-title = "Change Theme"
        ng-class = "{dark: !dataInstance.data.toggleTheme, light: dataInstance.data.toggleTheme}"
        ng-click = "dataInstance.data.toggleTheme = !dataInstance.data.toggleTheme"
        type = "button"
      )
        .theme
    h6.explorer-header
      | INSTANCE FILES
      a.btn.silver.btn-sm.file-explorer-menu.btn-icon(
        ng-class = "{active: dataInstance.data.popoverFileMenu.data.show}"
        toggle-pop-over
        toggle-pop-over-model = "dataInstance.data.popoverFileMenu.data.show"
      )
        svg.iconnables.icons-gear
          use(xlink:href = "#icons-gear")
        pop-over(
          actions = "dataInstance.data.popoverFileMenu.actions"
          data = "dataInstance.data.popoverFileMenu.data"
          template = "viewInstancePopoverFileMenu"
        )
    file-tree(
      read-only = "false"
      root-dir = "dataInstance.data.container.rootDir"
      open-items = "dataInstance.data.openItems"
    )
  tabs(
    open-items = "dataInstance.data.openItems"
  )
  a#add-tab.btn.btn-icon(
    ng-class = "{active: dataInstance.data.popoverAddTab.data.show}"
    toggle-pop-over
    toggle-pop-over-model = "dataInstance.data.popoverAddTab.data.show"
  )
    svg.iconnables.icons-add
      use(xlink:href = "#icons-add")
    pop-over(
      data = "dataInstance.data.popoverAddTab.data"
      actions = "dataInstance.data.popoverAddTab.actions"
      template = "viewInstancePopoverAddTab"
    )
  tabs-dropdown(
    open-items = "dataInstance.data.openItems"
  )
  active-panel(
    container = "dataInstance.data.container"
    open-items = "dataInstance.data.openItems"
    is-dark-theme = "dataInstance.data.toggleTheme"
    update = "false"
  )
  .horizontal-spinner