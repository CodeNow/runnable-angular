{
  "name": "grunt-jade-plugin",
  "version": "0.5.0",
  "description": "Compile Jade templates to one JavaScript file (normal or AMD).",
  "keywords": [
    "gruntplugin"
  ],
  "homepage": "https://github.com/ivanvotti/grunt-jade-plugin",
  "author": {
    "name": "Ivan Votti",
    "url": "http://ivanvotti.com/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/ivanvotti/grunt-jade-plugin.git"
  },
  "bugs": {
    "url": "https://github.com/ivanvotti/grunt-jade-plugin/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/ivanvotti/grunt-jade-plugin/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.coffee",
  "scripts": {
    "test": "grunt test"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "dependencies": {
    "jade": "~0.27.7"
  },
  "devDependencies": {
    "grunt": "~0.4.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.1.2"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "readme": "# grunt-jade-plugin [!['Build status'][travis_image_url]][travis_page_url]\n\n[![npm_image_url]][npm_page_url]\n\n[travis_image_url]: https://secure.travis-ci.org/ivanvotti/grunt-jade-plugin.png?branch=master\n[travis_page_url]: https://travis-ci.org/ivanvotti/grunt-jade-plugin\n\n[npm_image_url]: https://nodei.co/npm/grunt-jade-plugin.png?downloads=true\n[npm_page_url]: https://npmjs.org/package/grunt-jade-plugin/\n\nCompile Jade templates to one JavaScript file (normal or AMD).\n\n**Note:** This plugin requires [Grunt](http://gruntjs.com/) `~0.4.0`. If you're still using grunt v.0.3.x please use [0.3.x branch](https://github.com/ivanvotti/grunt-jade-plugin/tree/0.3.x) of this plugin.\n\n## Installation\n\n```shell\nnpm install grunt-jade-plugin --save-dev\n```\n\nIf you're still using [Grunt][] v.0.3.x:\n\n```shell\nnpm install grunt-jade-plugin@~0.3.0 --save-dev\n```\n\nThen it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-jade-plugin');\n```\n\n## Config Examples\n\n### AMD compilation\n\n``` javascript\njade2js: {\n  compile: {\n    options: {\n      amd: true,\n\n      amdDependences: {\n        'jade': 'jade',\n        'underscore': '_'\n      },\n    },\n\n    files: {\n      'templates.js': ['temlates/user.jade', 'templates/account.jade']\n    }\n  }\n}\n```\n\nThe result templates.js file will content:\n``` javascript\ndefine([\"jade\", \"underscore\"], function(jade, _) {\n  // Compiled templates will be here.\n}\n```\n\nYou can use your compiled templates like this:\n``` javascript\ndefine([\"templates\"], function(templates) {\n  var data = {name: 'John', age: 28};\n  var htmlResult = templates.user(data);\n  var htmlResult = templates.account(data);\n}\n```\n\n### Normal JS file compilation\n\n``` javascript\njade2js: {\n  compile: {\n    options: {\n      namespace: 'MyApp.Templates'\n    },\n    files: {\n      'templates.js': 'temlates/*.jade'\n    }\n  }\n}\n```\n\nThe result templates.js file will content:\n``` javascript\nthis['MyApp'] = this['MyApp'] || {};\nthis['MyApp']['Templates'] = this['MyApp']['Templates'] || {};\n\n// Template function\nthis['MyApp']['Templates']['user'] = function() {};\n```\n\nYou can use your compiled templates like this:\n``` javascript\nvar data = {name: 'John', age: 28};\nvar htmlResult = MyApp.Templates.user(data);\n```\n\n## Documentation\n\n#### Files ```object```\n\nDefine what files this task will process. For more info about ```files object``` please read [Grunt docs](http://gruntjs.com/configuring-tasks#files).\n\nExamples:\n```javascript\nfiles: {\n  'templates1.js': 'source/*.jade', // includes files from source dir only\n  'templates2.js': 'source/**/*.jade', // includes files from source dir and all its subdirs\n  'templates3.js': ['path/to/sources/file.jade', 'path/to/more/other.jade']\n}\n```\n\n#### Options ```object```\n\nThis controls how this task operates and should contain key:value pairs, see options below.\n\nAll options and defaults:\n\n```javascript\noptions: {\n  amd: false,\n  amdDependences: {},\n  includeRuntime: true,\n  injectBefore: '',\n  namespace: 'Templates',\n  compileDebug: false,\n  processName: function(filename) { return filename.split('/').pop().split('.')[0]; }\n}\n```\n\n##### processName ```function```\n\nThis option accepts a function which takes the template filepath and returns a string which will be used as the key for the precompiled template object.\n\nBy default processName removes the template file path and an extension like this:\n\n``` javascript\n// Before:\nTemplates['templates/user.jade']\n\n// After:\nTemplates['user']\n\n// So you can access your template function like this:\nTemplates.user\n```\n\nYou can change the default behaviour like this:\n``` javascript\nfiles: {\n  'templates.js': ['temlates/user.jade', 'templates/account.jade']\n},\n\noptions: {\n  processName: function(filename) {\n    return filename\n  }\n}\n```\n\nResutl:\n``` javascript\nTemplates['templates/user.jade']\nTemplates['templates/account.jade']\n\n```\n\n##### includeRuntime ```boolean```\n\nDetermine if Jade's [runtime.js](https://github.com/visionmedia/jade/blob/master/runtime.js) file will be included into the result JS file. By default it will be included.\n\nNote that you have to use the runtime file anyway. So if you prefer to keep it separately, you can download it from the [official repository](runtime.js).\n\n##### amd ```boolean```\n\nDetermine if preprocessed template functions will be wrapped in [Require.js][] define function (default is `false`).\n\n``` javascript\ndefine([], function() {\n  // ...\n});\n```\n\n##### amdDependences ```object```\n\n``` javascript\namdDependences: {\n  'helpers': 'helpers',\n  'underscore': '_'\n},\n```\n\nResult:\n``` javascript\ndefine([\"helpers\", \"underscore\"], function(helpers, _) {\n  // Compiled templates will be here.\n}\n```\n\n##### namespace ```string```\n\nThe namespace in which the precompiled templates will be assigned (default is `'Templates'`).  *Use dot notation (e.g. App.Templates) for nested namespaces.*\n\nExample:\n``` javascript\noptions: {\n  namespace: 'MyApp.Templates'\n}\n```\n\nResult:\n``` javascript\nthis['MyApp'] = this['MyApp'] || {};\nthis['MyApp']['Templates'] = this['MyApp']['Templates'] || {};\n\n// Template function\nthis['MyApp']['Templates']['user'] = function() {};\n```\n\n##### injectBefore ```string```\n\nIt should contain a string that will be injected before precompiled templates.\n\n``` javascript\noptions: {\n  injectBefore: '// string to enject'\n}\n```\n\n## Release History\nCheck the [HISTORY.md][] file for change logs and release notes.\n\n## License\nCopyright (c) 2012 Ivan Votti\nLicensed under the MIT license.  \n<https://github.com/ivanvotti/grunt-jade-plugin/blob/master/LICENSE-MIT>\n\n[history.md]: https://github.com/ivanvotti/grunt-jade-plugin/blob/master/HISTORY.md\n[grunt]: https://github.com/gruntjs/grunt\n[getting_started]: https://github.com/gruntjs/grunt/blob/master/docs/getting_started.md\n[grunt.template]: https://github.com/gruntjs/grunt/blob/master/docs/api_template.md\n[minimatch]: https://github.com/isaacs/minimatch\n[require.js]: http://requirejs.org\n[jade]: http://jade-lang.com\n",
  "readmeFilename": "README.md",
  "_id": "grunt-jade-plugin@0.5.0",
  "dist": {
    "shasum": "5664bae8728d8bac321ccebc9895c0854b33a71b"
  },
  "_resolved": "git://github.com/Runnable/grunt-jade-plugin.git#604fba490db0c8cf9ee4ce0c51ef91acf44ac573",
  "_from": "grunt-jade-plugin@git://github.com/Runnable/grunt-jade-plugin.git#604fba490db0c8cf9ee4ce0c51ef91acf44ac573"
}
