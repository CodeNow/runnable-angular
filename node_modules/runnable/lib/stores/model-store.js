'use strict';

var util = require('util');
var Base = require('./base');

function ModelStore (opts) {
  return Base.call(this, opts);
}

util.inherits(ModelStore, Base);

ModelStore.prototype.getKeyForModel = function (model) {
  // var name = model.storeName || model.constructor.name;
  var key = model.path();
  return key;
};

ModelStore.prototype.add = function (model) {
  var key = this.getKeyForModel(model);
  return Base.prototype.set.call(this, key, model);
};

ModelStore.prototype.get = function (model) {
  var key = this.getKeyForModel(model);
  return Base.prototype.get.call(this, key);
};

ModelStore.prototype.check = function (model) {
  var modelInCache = this.get(model);
  if (modelInCache) {
    return modelInCache;
  }
  else {
    this.add(model);
    return model;
  }
};

var isBrowser = typeof window !== 'undefined' || process.env.NODE_ENV === 'browser';
module.exports = new ModelStore({ enabled: isBrowser });