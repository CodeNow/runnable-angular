'use strict';

var util = require('util');
var jsonHash = require('json-hash');
var Base = require('./base');
var modelStore = require('./model-store');

function CollectionStore (opts) {
  return Base.call(this, opts);
}

util.inherits(CollectionStore, Base);

CollectionStore.prototype.getKeyForCollection = function (collection) {
  var name = collection.storeName || collection.constructor.name;
  var queryHash = jsonHash.digest(collection.query() || {});
  var key = name +'-'+ queryHash;
  return key;
};

CollectionStore.prototype.add = function (collection) {
  var key = this.getKeyForCollection(collection);
  collection.models = collection.models.map(function (model) {
    return modelStore.check(model);
  });
  return Base.prototype.set.call(this, key, collection);
};

CollectionStore.prototype.get = function (collection) {
  var key = this.getKeyForCollection(collection);
  return Base.prototype.get.call(this, key);
};

CollectionStore.prototype.check = function (collection) {
  var collectionInCache = this.get(collection);
  if (collectionInCache) {
    return collectionInCache;
  }
  else {
    this.add(collection);
    return collection;
  }
};

var isBrowser = typeof window !== 'undefined' || process.env.NODE_ENV === 'browser';
module.exports = new CollectionStore({ enabled: isBrowser });