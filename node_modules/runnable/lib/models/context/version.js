'use strict';

var path = require('path');
var util = require('util');
var isString = require('101/is-string');
var Base = require('../base');
var urlJoin = require('../../url-join');
var intercept = require('../../intercept');

module.exports = Version;

function Version (attr, opts) {
  opts = opts || {};
  opts.urlPath = urlJoin(opts.parentPath, 'versions');
  return Base.apply(this, arguments);
}

util.inherits(Version, Base);

require('../../extend-with-factories')(Version, 'context/version');

Version.prototype.urlPath = 'versions';

Version.prototype.build = function (id, opts, cb) {
  var args = this.formatArgs(arguments);
  id = args.id;
  opts = args.opts;
  cb = args.cb;
  if (!isString(id) || id.length === 0) {
    return cb(new TypeError('id is required'));
  }
  opts.statusCodes = opts.statusCodes || {
    201: true,
    401: false,
    404: false,
    409: false
  };
  var buildPath = path.join(this.path(id), 'build');
  return this.client.post(buildPath, opts, intercept(cb, function (body, code) {
    cb(null, body, code);
  }));
};
