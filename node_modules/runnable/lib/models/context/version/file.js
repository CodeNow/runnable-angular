'use strict';

var util = require('util');
var path = require('path');
var exists = require('101/exists');
var Base = require('../../base');
var urlJoin = require('../../../url-join');

module.exports = File;

function File () {
  return Base.apply(this, arguments);
}

util.inherits(File, Base);

require('../../../extend-with-factories')(File);

File.prototype.urlPath = 'files';

File.prototype.id = function (id) {
  var prepend = path.join(this.contextId(), 'source');
  if (exists(id)) {
    this.attrs.Key = path.join('/', prepend, id);
  }
  return this.attrs.Key && this.attrs.Key.replace(new RegExp('^(\/)?'+prepend), '');
};

File.prototype.contextId = function () {
  var opts = this.opts;
  if (!opts.contextId) {
    opts.contextId = opts.parentPath.split('/')[1];
  }
  return opts.contextId;
};

// This is use to differentiate context/file from version/file in the browser store
// the browser store guarantees only one instance of each type of object will ever exist
File.prototype.storeName = 'VersionFile';