// var Lab = require('lab');
// var describe = Lab.experiment;
// var it = Lab.test;
// var expect = Lab.expect;
// var before = Lab.before;
// var beforeEach = Lab.beforeEach;
// var after = Lab.after;
// var afterEach = Lab.afterEach;
var isBrowser = typeof window !== 'undefined';
var expect = require('chai').expect;
var User = require('../index'); // runnable api
var apiHost = isBrowser ?
  'http://localhost:3031':
  'http://api.runnable.pw';
var uuid = require('uuid');
var userOpts = isBrowser ? {
  requestDefaults: {
    headers: {
      'Access-Control-Allow-Credentials': true
    }
  }
} :
undefined;
// require('console-trace')({ require: true, right: true });

describe('auth', function() {
  describe('anonymous', function() {
    it('should create a anonymous token', function (done) {
      var user = new User(apiHost, userOpts);
      expect(user.client.opts.token).not.to.be.ok;
      user.anonymous(function (err) {
        if (err) { return done(err); }
        expect(user.client.opts.token).to.be.ok;
        done();
      });
    });
  });

  describe('register', function() {
    beforeEach(function (done) {
      this.email = uuid()+'@runnable.com';
      this.username = uuid();
      this.password = 'pass';
      this.user = new User(apiHost, userOpts);
      done();
    });
    afterEach(function (done) {
      delete this.email;
      delete this.username;
      delete this.password;
      delete this.user;
      done();
    });
    it('should register a user', function (done) {
      this.user.register(this.email, this.username, this.password, done);
    });
  });

  describe('login', function() {
    beforeEach(function (done) {
      this.email = uuid()+'@runnable.com';
      this.username = uuid();
      this.password = 'pass';
      var user = new User(apiHost, userOpts);
      user.register(this.email, this.username, this.password, done);
    });
    afterEach(function (done) {
      delete this.email;
      delete this.username;
      delete this.password;
      done();
    });
    it('should login if has valid username and password', function (done) {
      var user = new User(apiHost, userOpts);
      user.login(this.username, this.password, done);
    });
    it('should login if has valid email and password', function (done) {
      var user = new User(apiHost, userOpts);
      user.login(this.email, this.password, done);
    });
  });
});
