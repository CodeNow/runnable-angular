{
  "name": "karma-browserify",
  "description": "Browserify for Karma",
  "keywords": [
    "karma-plugin",
    "browserify"
  ],
  "version": "0.2.1",
  "author": {
    "name": "Greg Thornton",
    "email": "xdissent@me.com",
    "url": "http://xdissent.com"
  },
  "contributors": [
    {
      "name": "Alexandre Lacheze",
      "url": "https://github.com/alexstrat"
    },
    {
      "name": "Alex Gorbatchev",
      "url": "https://github.com/alexgorbatchev"
    },
    {
      "name": "Peter Lyons",
      "url": "https://github.com/focusaurus"
    },
    {
      "name": "Alex Arnell",
      "url": "https://github.com/voidlock"
    }
  ],
  "main": "./index.js",
  "license": "MIT",
  "homepage": "https://github.com/xdissent/karma-browserify",
  "repository": {
    "type": "git",
    "url": "https://github.com/xdissent/karma-browserify.git"
  },
  "bugs": {
    "url": "https://github.com/xdissent/karma-browserify/issues"
  },
  "dependencies": {
    "through": "~2.x.x",
    "chokidar": "~0.x.x"
  },
  "peerDependencies": {
    "karma": ">=0.9",
    "browserify": ">=3.30.5"
  },
  "devDependencies": {
    "groc": "0.x.x",
    "coffee-script": "~1.7.1"
  },
  "scripts": {
    "prepublish": "coffee -cbo lib src"
  },
  "readme": "karma-browserify\n================\n\n[Browserify](http://browserify.org) for [Karma](http://karma-runner.github.io)\n\n[![NPM version](https://badge.fury.io/js/karma-browserify.png)](http://badge.fury.io/js/karma-browserify) [![Dependency status](https://david-dm.org/xdissent/karma-browserify.png)](https://david-dm.org/xdissent/karma-browserify) [![devDependency Status](https://david-dm.org/xdissent/karma-browserify/dev-status.png)](https://david-dm.org/xdissent/karma-browserify#info=devDependencies)\n\nBrowserify is an awesome tool for managing front-end module dependencies with\n`require`, just like you would in Node. Karma is a killer JS test runner that's\nsuper fast and easy. But put them together and you're entering a world of pain.\nThis plugin aims to make them play nice.\n\nUnder most circumstances, Browserify attempts to give you a single monolithic\nbundle of all of your JS files and their dependencies. That's perfect for fast\ndelivery with minimal requests in a browser environment, but sucks hard if\nyou're just trying to run your tests (over and over). This plugin hijacks the\nBrowserify pipeline to produce a single bundle of *all* dependencies found in\nyour tests (and their dependencies) which is transferred to the browser under\ntest only once (unless it changes). A separate, minimal bundle is generated for\neach test which, aside from the test code, only contains references to\nexternal dependencies in the main bundle. That way dependencies are updated in\nthe browser only when necessary (watching for changes is supported) and your\ntests remain lightning fast.\n\n\nInstallation\n------------\n\nInstall the plugin from npm:\n\n```sh\n$ npm install karma-browserify --save-dev\n```\n\nOr from Github:\n\n```sh\n$ npm install 'git+https://github.com/xdissent/karma-browserify.git' --save-dev\n```\n\nAdd `browserify` to the `frameworks` and `preprocessor` keys in your\nKarma configuration:\n\n```coffee\nmodule.exports = (config) ->\n  config.set\n\n    # frameworks to use\n    frameworks: ['mocha', 'browserify']\n\n    preprocessors:\n      '**/*.coffee': ['coffee']\n      'my/test/files/*': ['browserify']\n\n    # ...\n```\n\n\nOptions\n-------\n\nThe plugin may be configured using the `browserify` key in your Karma config:\n\n```coffee\nmodule.exports = (config) ->\n  config.set\n\n    browserify:\n      extensions: ['.coffee']\n      ignore: [path.join __dirname, 'components/angular-unstable/angular.js']\n      transform: ['coffeeify']\n      watch: true   # Watches dependencies only (Karma watches the tests)\n      debug: true   # Adds source maps to bundle\n      noParse: ['jquery'] # Don't parse some modules\n\n    # ...\n```\n\n\nUsage\n-----\n\nJust `require` modules from within tests as you normally would in Node:\n\n```coffee\nsomething = require '../some/module'\n\ndescribe 'karma tests with browserify', ->\n\n  it 'should gimme dat module', ->\n    something.should.exist()\n```\n\nSee the [example](https://github.com/xdissent/karma-browserify/tree/master/example)\nfor a simple working setup.\n\nLicense\n-------\n\nThe MIT License (MIT)\n",
  "readmeFilename": "README.md",
  "_id": "karma-browserify@0.2.1",
  "_from": "karma-browserify@~0.2.1"
}
